name: Build with conda
on:
  push:
    branches:
      - master
  # For Pull-Requests, this runs the CI on merge commit
  # of HEAD with the target branch instead on HEAD, allowing
  # testing against potential new states which might have
  # been introduced in the target branch last commits.
  # See: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{github.ref}}
  cancel-in-progress: true
jobs:
  multi_os:
    strategy:
      fail-fast: false
      matrix:
        os: [linux, macos]
        tests: [cpp, python] # we use two jobs for python and cpp tests so they can run in parallel
        include:
          - os: linux
            run_on: ${{ fromJson(vars.CONDA_LINUX_RUN_ON || '"ubuntu-latest"') }}
            services:
              mongodb:
                image: mongo:4.4
                ports:
                  - 27017:27017
          - os: macos
            run_on: ${{ fromJson(vars.CONDA_MACOS_RUN_ON || '"macos-latest"') }}
            services: {}

    name: ${{ matrix.os }} ${{ matrix.tests }} tests
    runs-on: ${{ matrix.run_on }}
    services: ${{ matrix.services }}

    env:
      ARCTICDB_REDUCE_CORE_COUNT_TO_MATCH_FREE_RAM: 1
      ARCTICDB_USING_CONDA: 1
    defaults:
      run:
        shell: micromamba-shell {0}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Conda environment from environment_unix.yml
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment_unix.yml
          environment-name: arcticdb
          init-shell: none
          generate-run-shell: true
          cache-environment: true
          post-cleanup: ${{ runner.debug && 'none' || 'environment' }}
        # "init-shell" don't work very reliably on our build VMs, so use initialising it by hand below

      - name: Build ArcticDB with conda (ARCTICDB_USING_CONDA=1)
        run: |
          cmake -P cpp/CMake/CpuCount.cmake | sed 's/^-- //' | tee -a $GITHUB_ENV
          which clang
          clang --version

          # Protocol buffers compilation require not using build isolation.
          python -m pip install --no-build-isolation --no-deps -v -e .
        env:
          ARCTICDB_BUILD_CPP_TESTS: ${{ matrix.tests == 'cpp' && 1 || 0 }}

      - name: Build C++ Tests
        if: matrix.tests == 'cpp'
        run: |
          cd cpp/out/*-conda-release-build/
          make -j $CMAKE_BUILD_PARALLEL_LEVEL arcticdb_rapidcheck_tests
          make -j $CMAKE_BUILD_PARALLEL_LEVEL test_unit_arcticdb

      - name: Run C++ Tests
        if: matrix.tests == 'cpp'
        run: |
          cd cpp/out/*-conda-release-build/
          make test

      - name: Install npm
        if: matrix.tests == 'python'
        uses: actions/setup-node@v3.3.0
        with:
          node-version: '16'

      - name: Test with pytest
        if: matrix.tests == 'python'
        run: |
          npm install -g azurite
          cd python
          python -m pytest tests
