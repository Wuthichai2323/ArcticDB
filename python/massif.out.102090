desc: (none)
cmd: python test_mem_finalize.py
time_unit: i
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=70076268117
mem_heap_B=34085707
mem_heap_extra_B=1053301
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=2
#-----------
time=115221604741
mem_heap_B=40531446
mem_heap_extra_B=1189314
mem_stacks_B=0
heap_tree=detailed
n15: 40531446 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 10035200 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 10035200 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n2: 10035200 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 10035200 0x59644E0: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:204)
     n2: 10035200 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n2: 10035200 0x61FF257: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:15)
       n1: 10035200 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 10035200 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 10031104 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 10031104 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 10031104 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 10031104 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 10031104 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 10031104 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 10031104 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 10031104 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 10031104 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 10031104 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 10031104 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 10031104 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 10031104 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 10031104 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 10031104 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 10031104 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 10031104 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 10031104 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 10031104 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 10031104 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 10031104 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 10031104 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 4096 in 1 place, below massif's threshold (1.00%)
       n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 0 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
    n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 6114060 0x7567CD2: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 6114060 0x756810D: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 6114060 0x59EEB58: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n3: 6114060 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n1: 4193260 0x7B574BA: arcticdb::storage::s3::S3StreamBuffer::xsputn(char const*, long) (s3_real_client.cpp:82)
      n1: 4193260 0xA98F375: std::ostream::write(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
       n1: 4193260 0x89F7A7D: WriteData(char*, unsigned long, unsigned long, void*) (CurlHttpClient.cpp:219)
        n1: 4193260 0x8504E63: chop_write (sendf.c:321)
         n1: 4193260 0x8505208: Curl_client_write (sendf.c:415)
          n1: 4193260 0x8514F91: readwrite_data (transfer.c:709)
           n1: 4193260 0x8515CBF: Curl_readwrite (transfer.c:1133)
            n1: 4193260 0x84FDE1D: multi_runsingle (multi.c:2443)
             n1: 4193260 0x84FE743: curl_multi_perform (multi.c:2740)
              n1: 4193260 0x84ED446: easy_transfer (easy.c:679)
               n1: 4193260 0x84ED6CB: easy_perform (easy.c:769)
                n1: 4193260 0x84ED736: curl_easy_perform (easy.c:788)
                 n1: 4193260 0x89FADB3: Aws::Http::CurlHttpClient::MakeRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::Utils::RateLimits::RateLimiterInterface*, Aws::Utils::RateLimits::RateLimiterInterface*) const (CurlHttpClient.cpp:794)
                  n1: 4193260 0x8A7693F: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}::operator()() const (AWSClient.cpp:554)
                   n1: 4193260 0x8A87AE0: std::shared_ptr<Aws::Http::HttpResponse> std::__invoke_impl<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(std::__invoke_other, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:61)
                    n1: 4193260 0x8A85F36: std::enable_if<std::__and_<std::__not_<std::is_void<std::shared_ptr<Aws::Http::HttpResponse> > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>::type, std::shared_ptr<Aws::Http::HttpResponse> > >::value, std::shared_ptr<Aws::Http::HttpResponse> >::type std::__invoke_r<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:143)
                     n1: 4193260 0x8A83C48: std::_Function_handler<std::shared_ptr<Aws::Http::HttpResponse> (), Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                      n1: 4193260 0x8AAE7DF: std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>::operator()() const (std_function.h:590)
                       n1: 4193260 0x8AA015A: std::shared_ptr<Aws::Http::HttpResponse> smithy::components::tracing::TracingUtils::MakeCallWithTiming<std::shared_ptr<Aws::Http::HttpResponse> >(std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TracingUtils.h:65)
                        n1: 4193260 0x8A775EA: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const (AWSClient.cpp:558)
                         n1: 4193260 0x8A73055: Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:280)
                          n1: 4193260 0x8A78C69: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:645)
                           n1: 4193260 0x8A79157: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:695)
                            n1: 4193260 0x88E8DC8: Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}::operator()() const (S3Client.cpp:1820)
                             n1: 4193260 0x8963984: Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:61)
                              n0: 4193260 0x8953F70: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:143)
     n2: 1920800 0x5B34040: void arcticdb::CursoredBuffer<arcticdb::Buffer>::ensure<long>(unsigned long) (cursored_buffer.hpp:53)
      n2: 960400 0x61FF2A6: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:19)
       n1: 960400 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 960400 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 960008 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 960008 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 960008 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 960008 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 960008 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 960008 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 960008 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 960008 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 960008 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 960008 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 960008 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 960008 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 960008 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 960008 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 960008 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 960008 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 960008 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 960008 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 960008 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 960008 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 960008 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 960008 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 392 in 1 place, below massif's threshold (1.00%)
       n0: 0 in 1 place, below massif's threshold (1.00%)
      n2: 960400 0x61FF2ED: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:22)
       n1: 960400 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 960400 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 960008 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 960008 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 960008 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 960008 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 960008 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 960008 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 960008 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 960008 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 960008 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 960008 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 960008 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 960008 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 960008 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 960008 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 960008 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 960008 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 960008 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 960008 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 960008 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 960008 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 960008 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 960008 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 392 in 1 place, below massif's threshold (1.00%)
       n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 5652579 in 932 places, all below massif's threshold (1.00%)
 n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4294843 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4224792 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4224792 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2562168 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2562168 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1508872 in 155 places, all below massif's threshold (1.00%)
          n1: 1053296 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1053296 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1053296 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1053296 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1053296 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1050512 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1050512 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1050512 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1046096 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1046096 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1046096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1046096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1046096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1046096 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1046096 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1046096 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1046096 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1046096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1046096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1046096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1046096 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1046096 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1046096 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1046096 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1046096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1046096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1046096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1046096 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1046096 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1046096 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1046096 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1046096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1046096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1046096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1046096 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1046096 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1046096 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1046096 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1046096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1046096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n1: 1046096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1046096 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1046096 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1046096 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1046096 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1046096 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 829328 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 829328 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 825952 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 825952 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 825952 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 823744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 823744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 823744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 823744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 823744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 823744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 823744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 823744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 823744 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 823744 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 823744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 823744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 823744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 823744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 823744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 3376 in 1 place, below massif's threshold (1.00%)
                                                        n0: 216768 in 8 places, all below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1620736 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1620736 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n2: 1310744 0x259841: PyUnicode_InternInPlace (unicodeobject.c:15894)
           n2: 1310744 0x273DF8: r_object (marshal.c:1157)
            n1: 1310744 0x274684: r_object (marshal.c:1215)
             n1: 1310744 0x27477A: r_object (marshal.c:1215)
              n1: 1310744 0x274241: r_object (marshal.c:1391)
               n1: 1310744 0x27477A: r_object (marshal.c:1215)
                n1: 1310744 0x274241: r_object (marshal.c:1391)
                 n1: 1310744 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                  n1: 1310744 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                   n1: 1310744 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                    n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                     n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                      n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                       n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                        n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                         n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                          n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                           n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                            n1: 1310744 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                             n1: 1310744 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                              n1: 1310744 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                               n1: 1310744 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                 n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                  n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                   n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                    n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                     n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                      n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                       n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                        n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                         n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                          n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                           n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                            n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                             n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                              n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                               n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                 n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                  n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                   n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                    n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                         n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                          n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                           n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                               n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                                n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                 n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                  n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                   n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                    n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                     n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                      n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                       n0: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
            n0: 0 in 3 places, all below massif's threshold (1.00%)
           n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 309992 in 12 places, all below massif's threshold (1.00%)
        n0: 41888 in 1 place, below massif's threshold (1.00%)
      n0: 70051 in 6 places, all below massif's threshold (1.00%)
 n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 3993350 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 3993350 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 3993350 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 3993350 0x273DD4: r_object (marshal.c:1153)
          n1: 3493097 0x274660: r_object (marshal.c:1215)
           n2: 3493097 0x274241: r_object (marshal.c:1391)
            n1: 3254122 0x27477A: r_object (marshal.c:1215)
             n3: 3254122 0x274241: r_object (marshal.c:1391)
              n2: 1887155 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1884059 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1884059 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1884059 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1884059 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1884059 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1884059 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1884059 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1884059 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1884059 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1884059 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1884059 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1884059 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1037232 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1037232 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1037232 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1037232 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1037232 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1037232 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1037232 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1037232 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1037232 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1037232 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 842754 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 842754 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 839223 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 839223 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 839223 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 839223 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 839223 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 839223 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 839223 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 839223 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 839223 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 839223 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 839223 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 4073 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1336446 0x27477A: r_object (marshal.c:1215)
               n1: 1336446 0x274241: r_object (marshal.c:1391)
                n1: 1336446 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1336446 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1336446 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1336446 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1336446 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1336446 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1336446 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1336446 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1336446 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1336446 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1336446 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1336446 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1336446 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1336446 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1336446 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1336446 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1336446 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1336446 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1336446 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1336446 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1336446 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1336446 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1336446 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1336446 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1336446 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1336446 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1336446 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1336446 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1336446 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1336446 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1336446 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1336446 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1336446 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1336446 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1336446 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1336446 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1336446 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1336446 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1336446 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1336446 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1336446 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1336446 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1336446 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1336446 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1336446 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1336446 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1336446 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1336446 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1336446 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1336446 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1336446 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1207571 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1207571 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1203601 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1203601 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1203601 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1203601 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1203601 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 128875 in 2 places, all below massif's threshold (1.00%)
              n0: 30521 in 6 places, all below massif's threshold (1.00%)
            n0: 238975 in 8 places, all below massif's threshold (1.00%)
          n0: 500253 in 6 places, all below massif's threshold (1.00%)
 n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n4: 2633456 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1080880 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1080880 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1080880 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1080880 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 854320 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 854320 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 631536 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 631536 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 631536 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 631536 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 631536 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 631536 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 631536 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 631536 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 626816 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 626816 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 626816 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 626816 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 626816 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 626816 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 622096 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 622096 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 622096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 622096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 622096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 622096 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 622096 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 622096 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 622096 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 622096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 622096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 622096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 622096 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 622096 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 622096 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 622096 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 622096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 622096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 622096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 622096 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 622096 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 622096 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 622096 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 622096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 622096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 622096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 622096 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 622096 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 622096 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 622096 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 622096 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 622096 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 622096 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 622096 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 622096 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 622096 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 622096 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 622096 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 516368 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 516368 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 516368 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 516368 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 516368 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 516368 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 516368 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 516368 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 516368 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 516368 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 105728 in 2 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 4720 in 2 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 226560 in 2 places, all below massif's threshold (1.00%)
         n1: 919456 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 919456 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 919456 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 919456 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 754256 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 754256 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 668352 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 668352 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 668352 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 668352 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 668352 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 668352 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 668352 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 668352 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 662688 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 662688 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 662688 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 655136 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 655136 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 655136 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 647584 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 647584 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 647584 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 647584 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 647584 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 647584 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 647584 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 647584 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 647584 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 647584 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 647584 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 647584 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 647584 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 647584 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 647584 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 647584 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 647584 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 647584 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 647584 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 647584 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 647584 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 647584 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 647584 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 647584 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 647584 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 647584 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 647584 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 647584 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 647584 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 647584 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 647584 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 647584 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 647584 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 647584 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 647584 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 647584 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 647584 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 647584 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 512592 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 512592 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 512592 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 512592 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 512592 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 512592 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 512592 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 512592 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 512592 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 512592 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 134992 in 5 places, all below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 85904 in 16 places, all below massif's threshold (1.00%)
             n0: 165200 in 6 places, all below massif's threshold (1.00%)
         n1: 423656 0x28B5FB: UnknownInlinedFun (typeobject.c:2743)
          n1: 423656 0x28B5FB: UnknownInlinedFun (typeobject.c:3155)
           n1: 423656 0x28B5FB: UnknownInlinedFun (typeobject.c:3178)
            n1: 423656 0x28B5FB: type_new.lto_priv.0 (typeobject.c:3327)
             n0: 423656 in 4 places, all below massif's threshold (1.00%)
         n0: 209464 in 7 places, all below massif's threshold (1.00%)
 n1: 2326528 0x7B7B588: __gnu_cxx::new_allocator<arcticdb::AppendMapEntry>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 2326528 0x7B7864B: allocate (allocator.h:185)
   n1: 2326528 0x7B7864B: std::allocator_traits<std::allocator<arcticdb::AppendMapEntry> >::allocate(std::allocator<arcticdb::AppendMapEntry>&, unsigned long) (alloc_traits.h:464)
    n1: 2326528 0x7B77681: std::_Vector_base<arcticdb::AppendMapEntry, std::allocator<arcticdb::AppendMapEntry> >::_M_allocate(unsigned long) (stl_vector.h:346)
     n1: 2326528 0x7B75FCC: void std::vector<arcticdb::AppendMapEntry, std::allocator<arcticdb::AppendMapEntry> >::_M_realloc_insert<arcticdb::AppendMapEntry>(__gnu_cxx::__normal_iterator<arcticdb::AppendMapEntry*, std::vector<arcticdb::AppendMapEntry, std::allocator<arcticdb::AppendMapEntry> > >, arcticdb::AppendMapEntry&&) (vector.tcc:440)
      n1: 2326528 0x7B7509A: arcticdb::AppendMapEntry& std::vector<arcticdb::AppendMapEntry, std::allocator<arcticdb::AppendMapEntry> >::emplace_back<arcticdb::AppendMapEntry>(arcticdb::AppendMapEntry&&) (vector.tcc:121)
       n1: 2326528 0x7B74666: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:82)
        n1: 2326528 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
         n1: 2326528 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
          n1: 2326528 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
           n1: 2326528 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
            n1: 2326528 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
             n1: 2326528 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
              n1: 2326528 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
               n1: 2326528 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                n1: 2326528 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                 n1: 2326528 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                  n1: 2326528 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                   n1: 2326528 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                    n1: 2326528 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                     n1: 2326528 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                      n1: 2326528 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                       n1: 2326528 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                        n1: 2326528 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
                         n1: 2326528 0x7B6C478: arcticdb::get_incomplete(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::variant<std::monostate, arcticdb::entity::IndexRange, arcticdb::pipelines::RowRange> const&, unsigned long, bool, bool) (append_map.cpp:294)
                          n1: 2326528 0x76EADD2: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:864)
                           n1: 2326528 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                            n1: 2326528 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                             n1: 2326528 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                              n1: 2326528 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                               n0: 2326528 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
 n2: 1195053 0x8A6CFB7: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:76)
  n2: 1192821 0x8A6D043: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:104)
   n2: 1014957 0x912CF80: aws_mem_acquire (allocator.c:177)
    n2: 741510 0x9140D58: s_aws_cJSON_alloc (json.c:357)
     n1: 633344 0x915324E: cJSON_New_Item (cJSON.c:238)
      n0: 633344 in 6 places, all below massif's threshold (1.00%)
     n0: 108166 in 4 places, all below massif's threshold (1.00%)
    n0: 273447 in 12 places, all below massif's threshold (1.00%)
   n0: 177864 in 2 places, all below massif's threshold (1.00%)
  n0: 2232 in 28 places, all below massif's threshold (1.00%)
 n1: 819552 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 819552 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 819552 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 819552 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 819552 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n1: 819552 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 819552 in 5 places, all below massif's threshold (1.00%)
 n1: 747737 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 747737 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 747737 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 747737 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 747737 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 747737 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n2: 747737 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n1: 424134 0x2B11DB: UnknownInlinedFun (unicodeobject.c:10402)
         n1: 424134 0x2B11DB: unicode_join.lto_priv.0 (unicodeobject.c:12779)
          n1: 424134 0x29E78A: method_vectorcall_O.lto_priv.0 (descrobject.c:460)
           n1: 424134 0x27DAE7: UnknownInlinedFun (abstract.h:114)
            n1: 424134 0x27DAE7: UnknownInlinedFun (abstract.h:123)
             n1: 424134 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
              n1: 424134 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
               n0: 424134 in 2 places, all below massif's threshold (1.00%)
        n0: 323603 in 2 places, all below massif's threshold (1.00%)
 n1: 731922 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 731922 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 731922 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 731922 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 731922 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 731922 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 731922 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 731922 in 27 places, all below massif's threshold (1.00%)
 n1: 553108 0x598CDBA: __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 553108 0x596236C: allocate (allocator.h:185)
   n1: 553108 0x596236C: std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) (alloc_traits.h:464)
    n1: 553108 0x59774EB: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:153)
     n0: 553108 in 10 places, all below massif's threshold (1.00%)
 n1: 524408 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 524408 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 524408 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 524408 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 524408 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 524408 0x273173: UnknownInlinedFun (dictobject.c:709)
       n1: 524408 0x273173: PyDict_Copy (dictobject.c:2811)
        n0: 524408 in 6 places, all below massif's threshold (1.00%)
 n1: 490200 0x59D4FDE: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::FieldCollection, std::allocator<arcticdb::FieldCollection>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 490200 0x59CFB5B: allocate (allocator.h:185)
   n1: 490200 0x59CFB5B: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::FieldCollection, std::allocator<arcticdb::FieldCollection>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::FieldCollection, std::allocator<arcticdb::FieldCollection>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 490200 0x59C6DE1: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::FieldCollection, std::allocator<arcticdb::FieldCollection>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::FieldCollection, std::allocator<arcticdb::FieldCollection>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::FieldCollection, std::allocator<arcticdb::FieldCollection>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 490000 0x5B14BFB: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::FieldCollection, std::allocator<arcticdb::FieldCollection>, arcticdb::FieldCollection>(arcticdb::FieldCollection*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::FieldCollection> >, arcticdb::FieldCollection&&) (shared_ptr_base.h:648)
      n1: 490000 0x5B02987: std::__shared_ptr<arcticdb::FieldCollection, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::FieldCollection>, arcticdb::FieldCollection>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::FieldCollection> >, arcticdb::FieldCollection&&) (shared_ptr_base.h:1342)
       n1: 490000 0x5AE3866: std::shared_ptr<arcticdb::FieldCollection>::shared_ptr<std::allocator<arcticdb::FieldCollection>, arcticdb::FieldCollection>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::FieldCollection> >, arcticdb::FieldCollection&&) (shared_ptr.h:409)
        n1: 490000 0x5A999A3: std::shared_ptr<arcticdb::FieldCollection> std::allocate_shared<arcticdb::FieldCollection, std::allocator<arcticdb::FieldCollection>, arcticdb::FieldCollection>(std::allocator<arcticdb::FieldCollection> const&, arcticdb::FieldCollection&&) (shared_ptr.h:863)
         n2: 490000 0x5A8603C: std::shared_ptr<arcticdb::FieldCollection> std::make_shared<arcticdb::FieldCollection, arcticdb::FieldCollection>(arcticdb::FieldCollection&&) (shared_ptr.h:879)
          n2: 490000 0x5DD9933: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
           n1: 489800 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
            n1: 489800 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
             n1: 489800 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
              n1: 489800 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
               n1: 489800 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
                n1: 489800 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                 n1: 489800 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                  n1: 489800 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                   n1: 489800 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                    n1: 489800 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                     n1: 489800 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                      n1: 489800 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                       n1: 489800 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                        n1: 489800 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                         n1: 489800 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                          n1: 489800 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                           n1: 489800 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                            n1: 489800 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                             n1: 489800 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                              n1: 489800 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                               n0: 489800 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
           n0: 200 in 1 place, below massif's threshold (1.00%)
          n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 200 in 1 place, below massif's threshold (1.00%)
 n1: 419450 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 419450 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 419450 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 419450 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n1: 419450 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n0: 419450 in 6 places, all below massif's threshold (1.00%)
#-----------
snapshot=3
#-----------
time=151500921135
mem_heap_B=44653109
mem_heap_extra_B=1298147
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=4
#-----------
time=211423383686
mem_heap_B=1379118288
mem_heap_extra_B=3508616
mem_stacks_B=0
heap_tree=detailed
n2: 1379118288 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 1333859462 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 1333859462 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 1333021206 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 1311439382 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 1311418172 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n13: 896646968 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 135159488 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 135159488 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 135159488 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 135159488 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 135159488 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 135159488 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 135159488 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 135159488 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 135159488 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 135159488 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 135159488 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 134845152 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 134845152 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 134845152 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 134845152 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 134845152 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 134845152 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 134845152 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 134845152 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 134845152 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 134845152 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 134845152 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 134845152 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 134845152 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 135159488 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 135159488 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 135159488 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 135159488 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 135159488 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 135159488 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 135159488 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 135159488 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 135159488 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 135159488 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 135159488 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 134845152 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 134845152 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 134845152 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 134845152 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 134845152 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 134845152 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 134845152 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 134845152 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 134845152 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 134845152 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 134845152 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 134845152 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 134845152 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 135159488 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 135159488 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 135159488 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 135159488 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 135159488 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 135159488 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 135159488 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 135159488 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 135159488 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 135159488 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 135159488 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 134845152 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 134845152 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 134845152 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 134845152 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 134845152 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 134845152 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 134845152 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 134845152 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 134845152 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 134845152 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 134845152 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 134845152 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 134845152 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 135159488 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 135159488 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 135159488 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 135159488 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 135159488 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 135159488 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 135159488 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 135159488 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 135159488 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 135159488 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 135159488 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 134845152 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 134845152 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 134845152 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 134845152 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 134845152 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 134845152 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 134845152 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 134845152 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 134845152 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 134845152 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 134845152 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 134845152 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 134845152 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 67687776 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67687776 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 67687776 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67687776 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67687776 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67687776 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67687776 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67687776 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67687776 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 67687776 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 67687776 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 67530352 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 67530352 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 67530352 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 67530352 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 67530352 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 67530352 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 67530352 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 67530352 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 67530352 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 67530352 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 67530352 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 67530352 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 67530352 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 67687776 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67687776 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 67687776 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67687776 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67687776 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67687776 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67687776 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67687776 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67687776 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 67687776 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 67687776 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 67530352 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 67530352 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 67530352 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 67530352 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 67530352 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 67530352 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 67530352 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 67530352 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 67530352 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 67530352 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 67530352 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 67530352 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 67530352 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 67687776 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67687776 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 67687776 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67687776 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67687776 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67687776 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67687776 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67687776 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67687776 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 67687776 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 67687776 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 67530352 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 67530352 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 67530352 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 67530352 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 67530352 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 67530352 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 67530352 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 67530352 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 67530352 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 67530352 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 67530352 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 67530352 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 67530352 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 33951920 0x5DACD6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 33951920 0x5DB2C5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 33951920 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 33951920 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 33951920 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 33951920 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 33951920 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 33951920 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 33951920 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 33951920 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 33951920 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 33872952 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 33872952 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 33872952 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 33872952 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 33872952 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 33872952 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 33872952 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 33872952 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 33872952 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 33872952 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 33872952 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 33872952 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 33872952 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 33951920 0x5DAE3EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 33951920 0x5DB2CA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 33951920 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 33951920 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 33951920 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 33951920 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 33951920 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 33951920 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 33951920 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 33951920 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 33951920 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 33872952 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 33872952 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 33872952 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 33872952 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 33872952 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 33872952 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 33872952 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 33872952 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 33872952 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 33872952 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 33872952 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 33872952 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 33872952 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 33789872 0x5DB05AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 33789872 0x5DB2D08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 33789872 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 33789872 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 33789872 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 33789872 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 33789872 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 33789872 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 33789872 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 33789872 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 33789872 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 33711288 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 33711288 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 33711288 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 33711288 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 33711288 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 33711288 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 33711288 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 33711288 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 33711288 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 33711288 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 33711288 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 33711288 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 33711288 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78584 in 1 place, below massif's threshold (1.00%)
       n1: 17083992 0x5DAC7CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17083992 0x5DB2C4D: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
         n1: 17083992 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17083992 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17083992 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17083992 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17083992 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17083992 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17083992 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 17083992 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 17083992 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 17044252 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 17044252 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 17044252 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 17044252 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 17044252 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 17044252 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 17044252 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 17044252 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 17044252 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 17044252 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 17044252 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 17044252 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 17044252 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 17083992 0x5DADE4E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17083992 0x5DB2C91: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:29)
         n1: 17083992 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17083992 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17083992 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17083992 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17083992 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17083992 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17083992 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 17083992 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 17083992 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 17044252 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 17044252 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 17044252 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 17044252 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 17044252 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 17044252 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 17044252 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 17044252 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 17044252 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 17044252 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 17044252 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 17044252 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 17044252 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 17083992 0x5DB000E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17083992 0x5DB2CF7: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:35)
         n1: 17083992 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17083992 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17083992 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17083992 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17083992 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17083992 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17083992 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 17083992 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 17083992 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 17044252 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 17044252 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 17044252 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 17044252 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 17044252 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 17044252 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 17044252 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 17044252 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 17044252 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 17044252 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 17044252 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 17044252 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 17044252 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
      n1: 414771204 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 414771204 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 414771204 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 414771204 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 414771204 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 414771204 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 414771204 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 414771204 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 414771204 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 414771204 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 414771204 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 414771204 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 414771204 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n1: 413806612 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                    n1: 413806612 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                     n1: 413806612 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                      n1: 413806612 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                       n1: 413806612 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                        n1: 413806612 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                         n1: 413806612 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                          n1: 413806612 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                           n1: 413806612 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 413806612 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 413806612 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 413806612 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 964592 in 1 place, below massif's threshold (1.00%)
     n0: 21210 in 1 place, below massif's threshold (1.00%)
    n2: 21577728 0x59644E0: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:204)
     n2: 19845120 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n2: 19845120 0x61FF257: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:15)
       n1: 18116608 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 18116608 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 16384000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 16384000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 16384000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 16384000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 16384000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 16384000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 16384000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 16384000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 16384000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 16384000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 16384000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 16384000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 16384000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 16384000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 16384000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 16384000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 16384000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 16384000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 16384000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 16384000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 16384000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 16384000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 1732608 in 1 place, below massif's threshold (1.00%)
       n0: 1728512 in 1 place, below massif's threshold (1.00%)
      n0: 0 in 2 places, all below massif's threshold (1.00%)
     n0: 1732608 in 2 places, all below massif's threshold (1.00%)
    n0: 4096 in 1 place, below massif's threshold (1.00%)
   n0: 838256 in 1 place, below massif's threshold (1.00%)
 n0: 45258826 in 945 places, all below massif's threshold (1.00%)
#-----------
snapshot=5
#-----------
time=267389596564
mem_heap_B=4395468273
mem_heap_extra_B=8153559
mem_stacks_B=0
heap_tree=detailed
n2: 4395468273 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 4321988322 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 4321988322 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n2: 4319249818 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 4285920666 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 4285897432 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n13: 2930364700 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 441720160 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 441720160 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 441720160 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 441720160 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 441720160 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 441720160 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 441720160 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 441720160 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 441720160 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 441720160 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 441720160 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 441405824 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 441405824 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 441405824 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 441405824 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 441405824 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 441405824 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 441405824 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 441405824 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 441405824 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 441405824 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 441405824 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 441405824 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 441405824 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 441720160 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 441720160 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 441720160 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 441720160 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 441720160 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 441720160 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 441720160 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 441720160 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 441720160 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 441720160 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 441720160 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 441405824 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 441405824 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 441405824 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 441405824 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 441405824 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 441405824 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 441405824 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 441405824 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 441405824 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 441405824 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 441405824 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 441405824 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 441405824 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 441720160 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 441720160 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 441720160 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 441720160 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 441720160 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 441720160 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 441720160 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 441720160 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 441720160 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 441720160 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 441720160 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 441405824 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 441405824 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 441405824 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 441405824 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 441405824 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 441405824 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 441405824 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 441405824 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 441405824 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 441405824 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 441405824 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 441405824 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 441405824 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 441720160 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 441720160 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 441720160 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 441720160 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 441720160 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 441720160 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 441720160 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 441720160 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 441720160 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 441720160 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 441720160 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 441405824 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 441405824 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 441405824 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 441405824 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 441405824 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 441405824 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 441405824 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 441405824 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 441405824 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 441405824 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 441405824 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 441405824 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 441405824 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 221212848 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 221212848 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 221212848 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 221212848 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 221212848 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 221212848 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 221212848 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 221212848 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 221212848 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 221212848 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 221212848 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 221055424 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 221055424 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 221055424 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 221055424 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 221055424 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 221055424 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 221055424 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 221055424 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 221055424 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 221055424 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 221055424 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 221055424 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 221055424 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 221212848 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 221212848 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 221212848 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 221212848 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 221212848 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 221212848 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 221212848 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 221212848 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 221212848 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 221212848 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 221212848 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 221055424 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 221055424 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 221055424 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 221055424 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 221055424 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 221055424 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 221055424 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 221055424 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 221055424 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 221055424 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 221055424 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 221055424 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 221055424 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 221212848 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 221212848 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 221212848 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 221212848 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 221212848 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 221212848 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 221212848 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 221212848 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 221212848 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 221212848 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 221212848 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 221055424 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 221055424 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 221055424 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 221055424 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 221055424 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 221055424 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 221055424 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 221055424 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 221055424 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 221055424 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 221055424 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 221055424 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 221055424 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 110959192 0x5DACD6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 110959192 0x5DB2C5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 110959192 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 110959192 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 110959192 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 110959192 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 110959192 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 110959192 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 110959192 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 110959192 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 110959192 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 110880224 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 110880224 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 110880224 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 110880224 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 110880224 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 110880224 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 110880224 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 110880224 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 110880224 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 110880224 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 110880224 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 110880224 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 110880224 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 110959192 0x5DAE3EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 110959192 0x5DB2CA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 110959192 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 110959192 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 110959192 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 110959192 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 110959192 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 110959192 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 110959192 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 110959192 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 110959192 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 110880224 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 110880224 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 110880224 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 110880224 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 110880224 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 110880224 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 110880224 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 110880224 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 110880224 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 110880224 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 110880224 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 110880224 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 110880224 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 110430040 0x5DB05AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 110430040 0x5DB2D08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 110430040 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 110430040 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 110430040 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 110430040 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 110430040 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 110430040 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 110430040 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 110430040 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 110430040 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 110351456 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 110351456 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 110351456 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 110351456 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 110351456 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 110351456 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 110351456 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 110351456 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 110351456 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 110351456 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 110351456 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 110351456 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 110351456 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78584 in 1 place, below massif's threshold (1.00%)
       n1: 55832364 0x5DAC7CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 55832364 0x5DB2C4D: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
         n1: 55832364 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 55832364 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 55832364 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 55832364 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 55832364 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 55832364 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 55832364 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 55832364 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 55832364 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 55792624 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 55792624 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 55792624 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 55792624 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 55792624 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 55792624 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 55792624 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 55792624 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 55792624 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 55792624 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 55792624 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 55792624 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 55792624 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 55832364 0x5DADE4E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 55832364 0x5DB2C91: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:29)
         n1: 55832364 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 55832364 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 55832364 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 55832364 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 55832364 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 55832364 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 55832364 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 55832364 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 55832364 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 55792624 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 55792624 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 55792624 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 55792624 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 55792624 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 55792624 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 55792624 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 55792624 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 55792624 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 55792624 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 55792624 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 55792624 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 55792624 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 55832364 0x5DB000E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 55832364 0x5DB2CF7: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:35)
         n1: 55832364 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 55832364 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 55832364 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 55832364 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 55832364 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 55832364 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 55832364 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 55832364 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 55832364 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 55792624 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 55792624 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 55792624 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 55792624 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 55792624 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 55792624 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 55792624 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 55792624 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 55792624 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 55792624 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 55792624 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 55792624 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 55792624 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
      n1: 1355532732 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 1355532732 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 1355532732 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 1355532732 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 1355532732 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 1355532732 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 1355532732 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 1355532732 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 1355532732 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 1355532732 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 1355532732 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 1355532732 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 1355532732 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n1: 1354568140 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                    n1: 1354568140 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                     n1: 1354568140 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                      n1: 1354568140 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                       n1: 1354568140 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                        n1: 1354568140 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                         n1: 1354568140 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                          n1: 1354568140 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                           n1: 1354568140 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 1354568140 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 1354568140 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 1354568140 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 964592 in 1 place, below massif's threshold (1.00%)
     n0: 23234 in 1 place, below massif's threshold (1.00%)
    n0: 33329152 in 2 places, all below massif's threshold (1.00%)
   n0: 2738504 in 1 place, below massif's threshold (1.00%)
 n0: 73479951 in 945 places, all below massif's threshold (1.00%)
#-----------
snapshot=6
#-----------
time=315050041845
mem_heap_B=6963272657
mem_heap_extra_B=12122271
mem_stacks_B=0
heap_tree=detailed
n2: 6963272657 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 6865733906 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 6865733906 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n2: 6861377754 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 6818033882 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 6818011200 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n13: 4661629140 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 702688800 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 702688800 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 702688800 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 702688800 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 702688800 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 702688800 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 702688800 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 702688800 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 702688800 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 702688800 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 702688800 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 702374464 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 702374464 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 702374464 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 702374464 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 702374464 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 702374464 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 702374464 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 702374464 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 702374464 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 702374464 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 702374464 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 702374464 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 702374464 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 702688800 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 702688800 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 702688800 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 702688800 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 702688800 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 702688800 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 702688800 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 702688800 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 702688800 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 702688800 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 702688800 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 702374464 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 702374464 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 702374464 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 702374464 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 702374464 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 702374464 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 702374464 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 702374464 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 702374464 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 702374464 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 702374464 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 702374464 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 702374464 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 702688800 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 702688800 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 702688800 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 702688800 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 702688800 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 702688800 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 702688800 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 702688800 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 702688800 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 702688800 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 702688800 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 702374464 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 702374464 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 702374464 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 702374464 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 702374464 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 702374464 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 702374464 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 702374464 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 702374464 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 702374464 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 702374464 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 702374464 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 702374464 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 702688800 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 702688800 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 702688800 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 702688800 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 702688800 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 702688800 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 702688800 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 702688800 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 702688800 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 702688800 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 702688800 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 702374464 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 702374464 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 702374464 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 702374464 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 702374464 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 702374464 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 702374464 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 702374464 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 702374464 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 702374464 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 702374464 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 702374464 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 702374464 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 351905808 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 351905808 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 351905808 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 351905808 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 351905808 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 351905808 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 351905808 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 351905808 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 351905808 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 351905808 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 351905808 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 351748384 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 351748384 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 351748384 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 351748384 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 351748384 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 351748384 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 351748384 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 351748384 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 351748384 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 351748384 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 351748384 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 351748384 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 351748384 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 351905808 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 351905808 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 351905808 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 351905808 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 351905808 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 351905808 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 351905808 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 351905808 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 351905808 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 351905808 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 351905808 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 351748384 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 351748384 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 351748384 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 351748384 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 351748384 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 351748384 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 351748384 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 351748384 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 351748384 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 351748384 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 351748384 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 351748384 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 351748384 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 351905808 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 351905808 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 351905808 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 351905808 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 351905808 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 351905808 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 351905808 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 351905808 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 351905808 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 351905808 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 351905808 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 351748384 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 351748384 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 351748384 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 351748384 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 351748384 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 351748384 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 351748384 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 351748384 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 351748384 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 351748384 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 351748384 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 351748384 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 351748384 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 176514312 0x5DACD6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 176514312 0x5DB2C5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 176514312 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 176514312 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 176514312 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 176514312 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 176514312 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 176514312 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 176514312 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 176514312 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 176514312 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 176435344 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 176435344 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 176435344 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 176435344 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 176435344 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 176435344 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 176435344 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 176435344 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 176435344 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 176435344 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 176435344 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 176435344 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 176435344 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 176514312 0x5DAE3EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 176514312 0x5DB2CA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 176514312 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 176514312 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 176514312 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 176514312 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 176514312 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 176514312 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 176514312 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 176514312 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 176514312 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 176435344 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 176435344 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 176435344 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 176435344 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 176435344 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 176435344 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 176435344 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 176435344 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 176435344 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 176435344 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 176435344 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 176435344 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 176435344 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 175672200 0x5DB05AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 175672200 0x5DB2D08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 175672200 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 175672200 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 175672200 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 175672200 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 175672200 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 175672200 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 175672200 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 175672200 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 175672200 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 175593616 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 175593616 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 175593616 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 175593616 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 175593616 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 175593616 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 175593616 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 175593616 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 175593616 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 175593616 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 175593616 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 175593616 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 175593616 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78584 in 1 place, below massif's threshold (1.00%)
       n1: 88818564 0x5DAC7CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 88818564 0x5DB2C4D: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
         n1: 88818564 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 88818564 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 88818564 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 88818564 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 88818564 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 88818564 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 88818564 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 88818564 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 88818564 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 88778824 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 88778824 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 88778824 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 88778824 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 88778824 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 88778824 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 88778824 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 88778824 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 88778824 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 88778824 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 88778824 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 88778824 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 88778824 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 88818564 0x5DADE4E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 88818564 0x5DB2C91: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:29)
         n1: 88818564 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 88818564 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 88818564 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 88818564 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 88818564 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 88818564 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 88818564 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 88818564 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 88818564 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 88778824 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 88778824 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 88778824 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 88778824 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 88778824 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 88778824 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 88778824 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 88778824 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 88778824 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 88778824 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 88778824 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 88778824 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 88778824 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 88818564 0x5DB000E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 88818564 0x5DB2CF7: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:35)
         n1: 88818564 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 88818564 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 88818564 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 88818564 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 88818564 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 88818564 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 88818564 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 88818564 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 88818564 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 88778824 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 88778824 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 88778824 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 88778824 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 88778824 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 88778824 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 88778824 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 88778824 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 88778824 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 88778824 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 88778824 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 88778824 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 88778824 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
      n1: 2156382060 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 2156382060 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 2156382060 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 2156382060 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 2156382060 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 2156382060 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 2156382060 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 2156382060 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 2156382060 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 2156382060 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 2156382060 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 2156382060 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 2156382060 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n1: 2155417468 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                    n1: 2155417468 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                     n1: 2155417468 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                      n1: 2155417468 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                       n1: 2155417468 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                        n1: 2155417468 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                         n1: 2155417468 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                          n1: 2155417468 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                           n1: 2155417468 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2155417468 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2155417468 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2155417468 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 964592 in 1 place, below massif's threshold (1.00%)
     n0: 22682 in 1 place, below massif's threshold (1.00%)
    n0: 43343872 in 2 places, all below massif's threshold (1.00%)
   n0: 4356152 in 1 place, below massif's threshold (1.00%)
 n0: 97538751 in 945 places, all below massif's threshold (1.00%)
#-----------
snapshot=7
#-----------
time=377378489344
mem_heap_B=10321214105
mem_heap_extra_B=17310679
mem_stacks_B=0
heap_tree=detailed
n2: 10321214105 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 10192207034 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 10192207034 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n2: 10185735498 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 10129292618 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 10129269844 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n13: 6925613500 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 1043958880 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1043958880 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 1043958880 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1043958880 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1043958880 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1043958880 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1043958880 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1043958880 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1043958880 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1043958880 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1043958880 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1043644544 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 1043644544 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 1043644544 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 1043644544 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 1043644544 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 1043644544 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 1043644544 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 1043644544 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 1043644544 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 1043644544 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 1043644544 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 1043644544 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 1043644544 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 1043958880 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1043958880 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 1043958880 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1043958880 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1043958880 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1043958880 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1043958880 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1043958880 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1043958880 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1043958880 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1043958880 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1043644544 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 1043644544 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 1043644544 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 1043644544 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 1043644544 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 1043644544 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 1043644544 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 1043644544 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 1043644544 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 1043644544 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 1043644544 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 1043644544 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 1043644544 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 1043958880 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1043958880 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 1043958880 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1043958880 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1043958880 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1043958880 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1043958880 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1043958880 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1043958880 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1043958880 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1043958880 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1043644544 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 1043644544 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 1043644544 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 1043644544 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 1043644544 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 1043644544 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 1043644544 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 1043644544 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 1043644544 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 1043644544 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 1043644544 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 1043644544 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 1043644544 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 1043958880 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1043958880 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 1043958880 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1043958880 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1043958880 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1043958880 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1043958880 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1043958880 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1043958880 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1043958880 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1043958880 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1043644544 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 1043644544 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 1043644544 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 1043644544 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 1043644544 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 1043644544 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 1043644544 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 1043644544 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 1043644544 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 1043644544 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 1043644544 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 1043644544 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 1043644544 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 522813744 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 522813744 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 522813744 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 522813744 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 522813744 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 522813744 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 522813744 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 522813744 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 522813744 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 522813744 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 522813744 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 522656320 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 522656320 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 522656320 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 522656320 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 522656320 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 522656320 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 522656320 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 522656320 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 522656320 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 522656320 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 522656320 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 522656320 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 522656320 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 522813744 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 522813744 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 522813744 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 522813744 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 522813744 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 522813744 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 522813744 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 522813744 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 522813744 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 522813744 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 522813744 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 522656320 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 522656320 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 522656320 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 522656320 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 522656320 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 522656320 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 522656320 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 522656320 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 522656320 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 522656320 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 522656320 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 522656320 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 522656320 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 522813744 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 522813744 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 522813744 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 522813744 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 522813744 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 522813744 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 522813744 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 522813744 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 522813744 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 522813744 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 522813744 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 522656320 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 522656320 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 522656320 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 522656320 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 522656320 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 522656320 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 522656320 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 522656320 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 522656320 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 522656320 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 522656320 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 522656320 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 522656320 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 262241176 0x5DACD6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 262241176 0x5DB2C5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 262241176 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 262241176 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 262241176 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 262241176 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 262241176 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 262241176 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 262241176 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 262241176 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 262241176 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 262162208 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 262162208 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 262162208 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 262162208 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 262162208 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 262162208 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 262162208 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 262162208 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 262162208 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 262162208 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 262162208 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 262162208 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 262162208 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 262241176 0x5DAE3EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 262241176 0x5DB2CA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 262241176 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 262241176 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 262241176 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 262241176 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 262241176 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 262241176 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 262241176 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 262241176 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 262241176 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 262162208 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 262162208 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 262162208 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 262162208 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 262162208 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 262162208 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 262162208 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 262162208 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 262162208 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 262162208 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 262162208 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 262162208 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 262162208 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 260989720 0x5DB05AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 260989720 0x5DB2D08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 260989720 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 260989720 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 260989720 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 260989720 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 260989720 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 260989720 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 260989720 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 260989720 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 260989720 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 260911136 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 260911136 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 260911136 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 260911136 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 260911136 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 260911136 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 260911136 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 260911136 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 260911136 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 260911136 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 260911136 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 260911136 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 260911136 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78584 in 1 place, below massif's threshold (1.00%)
       n1: 131954892 0x5DAC7CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 131954892 0x5DB2C4D: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
         n1: 131954892 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 131954892 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 131954892 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 131954892 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 131954892 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 131954892 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 131954892 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 131954892 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 131954892 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 131915152 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 131915152 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 131915152 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 131915152 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 131915152 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 131915152 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 131915152 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 131915152 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 131915152 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 131915152 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 131915152 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 131915152 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 131915152 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 131954892 0x5DADE4E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 131954892 0x5DB2C91: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:29)
         n1: 131954892 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 131954892 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 131954892 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 131954892 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 131954892 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 131954892 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 131954892 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 131954892 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 131954892 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 131915152 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 131915152 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 131915152 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 131915152 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 131915152 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 131915152 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 131915152 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 131915152 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 131915152 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 131915152 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 131915152 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 131915152 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 131915152 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 131954892 0x5DB000E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 131954892 0x5DB2CF7: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:35)
         n1: 131954892 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 131954892 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 131954892 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 131954892 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 131954892 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 131954892 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 131954892 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 131954892 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 131954892 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 131915152 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 131915152 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 131915152 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 131915152 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 131915152 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 131915152 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 131915152 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 131915152 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 131915152 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 131915152 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 131915152 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 131915152 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 131915152 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
      n1: 3203656344 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 3203656344 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 3203656344 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 3203656344 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 3203656344 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 3203656344 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 3203656344 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 3203656344 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 3203656344 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 3203656344 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 3203656344 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 3203656344 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 3203656344 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n1: 3202691752 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                    n1: 3202691752 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                     n1: 3202691752 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                      n1: 3202691752 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                       n1: 3202691752 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                        n1: 3202691752 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                         n1: 3202691752 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                          n1: 3202691752 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                           n1: 3202691752 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 3202691752 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 3202691752 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 3202691752 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 964592 in 1 place, below massif's threshold (1.00%)
     n0: 22774 in 1 place, below massif's threshold (1.00%)
    n0: 56442880 in 2 places, all below massif's threshold (1.00%)
   n0: 6471536 in 1 place, below massif's threshold (1.00%)
 n0: 129007071 in 945 places, all below massif's threshold (1.00%)
#-----------
snapshot=8
#-----------
time=420253784612
mem_heap_B=12629431241
mem_heap_extra_B=20871511
mem_stacks_B=0
heap_tree=peak
n2: 12629431241 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 12478509684 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 12478509684 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n2: 12470584572 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 12405142780 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 12405142780 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n13: 8481681148 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 1278518368 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1278518368 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 1278518368 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1278518368 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1278518368 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1278518368 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1278518368 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1278518368 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1278518368 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1278518368 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1278518368 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1278204032 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 1278204032 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 1278204032 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 1278204032 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 1278204032 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 1278204032 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 1278204032 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 1278204032 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 1278204032 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 1278204032 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 1278204032 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 1278204032 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 1278204032 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 1278518368 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1278518368 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 1278518368 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1278518368 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1278518368 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1278518368 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1278518368 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1278518368 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1278518368 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1278518368 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1278518368 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1278204032 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 1278204032 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 1278204032 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 1278204032 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 1278204032 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 1278204032 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 1278204032 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 1278204032 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 1278204032 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 1278204032 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 1278204032 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 1278204032 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 1278204032 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 1278518368 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1278518368 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 1278518368 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1278518368 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1278518368 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1278518368 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1278518368 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1278518368 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1278518368 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1278518368 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1278518368 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1278204032 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 1278204032 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 1278204032 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 1278204032 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 1278204032 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 1278204032 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 1278204032 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 1278204032 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 1278204032 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 1278204032 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 1278204032 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 1278204032 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 1278204032 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 1278518368 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1278518368 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 1278518368 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1278518368 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1278518368 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1278518368 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1278518368 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1278518368 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1278518368 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1278518368 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1278518368 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1278204032 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 1278204032 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 1278204032 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 1278204032 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 1278204032 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 1278204032 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 1278204032 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 1278204032 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 1278204032 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 1278204032 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 1278204032 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 1278204032 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 1278204032 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 314336 in 1 place, below massif's threshold (1.00%)
       n1: 640281136 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 640281136 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 640281136 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 640281136 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 640281136 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 640281136 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 640281136 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 640281136 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 640281136 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 640281136 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 640281136 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 640123712 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 640123712 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 640123712 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 640123712 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 640123712 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 640123712 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 640123712 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 640123712 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 640123712 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 640123712 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 640123712 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 640123712 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 640123712 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 640281136 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 640281136 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 640281136 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 640281136 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 640281136 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 640281136 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 640281136 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 640281136 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 640281136 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 640281136 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 640281136 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 640123712 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 640123712 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 640123712 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 640123712 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 640123712 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 640123712 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 640123712 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 640123712 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 640123712 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 640123712 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 640123712 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 640123712 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 640123712 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 640281136 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 640281136 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 640281136 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 640281136 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 640281136 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 640281136 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 640281136 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 640281136 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 640281136 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 640281136 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 640281136 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 640123712 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 640123712 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 640123712 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 640123712 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 640123712 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 640123712 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 640123712 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 640123712 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 640123712 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 640123712 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 640123712 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 640123712 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 640123712 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 157424 in 1 place, below massif's threshold (1.00%)
       n1: 321162520 0x5DACD6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 321162520 0x5DB2C5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 321162520 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 321162520 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 321162520 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 321162520 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 321162520 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 321162520 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 321162520 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 321162520 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 321162520 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 321083552 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 321083552 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 321083552 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 321083552 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 321083552 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 321083552 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 321083552 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 321083552 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 321083552 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 321083552 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 321083552 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 321083552 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 321083552 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 321162520 0x5DAE3EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 321162520 0x5DB2CA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 321162520 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 321162520 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 321162520 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 321162520 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 321162520 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 321162520 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 321162520 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 321162520 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 321162520 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 321083552 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 321083552 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 321083552 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 321083552 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 321083552 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 321083552 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 321083552 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 321083552 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 321083552 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 321083552 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 321083552 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 321083552 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 321083552 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78968 in 1 place, below massif's threshold (1.00%)
       n1: 319629592 0x5DB05AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 319629592 0x5DB2D08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 319629592 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 319629592 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 319629592 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 319629592 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 319629592 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 319629592 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 319629592 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 319629592 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 319629592 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 319551008 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 319551008 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 319551008 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 319551008 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 319551008 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 319551008 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 319551008 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 319551008 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 319551008 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 319551008 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 319551008 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 319551008 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 319551008 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 78584 in 1 place, below massif's threshold (1.00%)
       n1: 161603212 0x5DAC7CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 161603212 0x5DB2C4D: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
         n1: 161603212 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 161603212 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 161603212 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 161603212 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 161603212 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 161603212 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 161603212 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 161603212 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 161603212 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 161563472 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 161563472 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 161563472 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 161563472 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 161563472 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 161563472 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 161563472 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 161563472 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 161563472 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 161563472 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 161563472 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 161563472 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 161563472 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 161603212 0x5DADE4E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)17>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 161603212 0x5DB2C91: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:29)
         n1: 161603212 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 161603212 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 161603212 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 161603212 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 161603212 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 161603212 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 161603212 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 161603212 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 161603212 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 161563472 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 161563472 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 161563472 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 161563472 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 161563472 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 161563472 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 161563472 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 161563472 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 161563472 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 161563472 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 161563472 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 161563472 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 161563472 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
       n1: 161603212 0x5DB000E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)33>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 161603212 0x5DB2CF7: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:35)
         n1: 161603212 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 161603212 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 161603212 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 161603212 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 161603212 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 161603212 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 161603212 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 161603212 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 161603212 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 161563472 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                   n1: 161563472 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                    n1: 161563472 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                     n1: 161563472 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                      n1: 161563472 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                       n1: 161563472 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                        n1: 161563472 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                         n1: 161563472 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 161563472 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 161563472 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 161563472 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 161563472 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n0: 161563472 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n0: 39740 in 1 place, below massif's threshold (1.00%)
      n1: 3923461632 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 3923461632 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 3923461632 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 3923461632 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 3923461632 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 3923461632 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 3923461632 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 3923461632 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 3923461632 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 3923461632 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 3923461632 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 3923461632 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 3923461632 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n1: 3922497040 0x78D143A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:37)
                    n1: 3922497040 0x76EACE1: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}::operator()(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&) const (version_core.cpp:899)
                     n1: 3922497040 0x7759795: bool __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:158)
                      n1: 3922497040 0x77597FF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_comp_iter<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>) (stl_algo.h:909)
                       n1: 3922497040 0x771C5AF: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::adjacent_find<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(arcticdb::pipelines::SliceAndKey const&, arcticdb::pipelines::SliceAndKey const&)#2}) (stl_algo.h:4043)
                        n1: 3922497040 0x76EB180: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:894)
                         n1: 3922497040 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
                          n1: 3922497040 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                           n1: 3922497040 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 3922497040 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 3922497040 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 3922497040 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 964592 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 65441792 in 2 places, all below massif's threshold (1.00%)
   n0: 7925112 in 1 place, below massif's threshold (1.00%)
 n0: 150921557 in 945 places, all below massif's threshold (1.00%)
#-----------
snapshot=9
#-----------
time=478585914426
mem_heap_B=164514741
mem_heap_extra_B=1584427
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=10
#-----------
time=520429032671
mem_heap_B=183834631
mem_heap_extra_B=1443769
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=11
#-----------
time=578332919337
mem_heap_B=163028947
mem_heap_extra_B=1591845
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=12
#-----------
time=624081997497
mem_heap_B=153183937
mem_heap_extra_B=1482671
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=661163416514
mem_heap_B=150520649
mem_heap_extra_B=1478103
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=14
#-----------
time=716732273327
mem_heap_B=144658145
mem_heap_extra_B=1466839
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=15
#-----------
time=766892602146
mem_heap_B=151309780
mem_heap_extra_B=1478788
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=16
#-----------
time=801081951336
mem_heap_B=163997921
mem_heap_extra_B=1594815
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=17
#-----------
time=867602998131
mem_heap_B=160527724
mem_heap_extra_B=1591116
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=18
#-----------
time=943022683350
mem_heap_B=160528340
mem_heap_extra_B=1585660
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=19
#-----------
time=984455426566
mem_heap_B=182079728
mem_heap_extra_B=1453616
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=20
#-----------
time=1033516820036
mem_heap_B=181829195
mem_heap_extra_B=1450989
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=21
#-----------
time=1080533021114
mem_heap_B=141239683
mem_heap_extra_B=1463157
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=22
#-----------
time=1150036028414
mem_heap_B=148304690
mem_heap_extra_B=1473654
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=23
#-----------
time=1208688779182
mem_heap_B=135911697
mem_heap_extra_B=1603839
mem_stacks_B=0
heap_tree=detailed
n8: 135911697 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 105862465 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 105862465 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n4: 71956022 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 34018646 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 33772816 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n8: 22977080 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 3958392 in 6 places, all below massif's threshold (1.00%)
       n1: 3514816 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3514816 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 3514816 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3514816 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3514816 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3514816 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3514816 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3514816 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3514816 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3514816 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3514816 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3514816 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3514816 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3514816 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 3514816 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3514816 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3514816 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3514816 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3514816 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3514816 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3514816 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3514816 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3514816 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3514816 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3514816 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3514816 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 3514816 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3514816 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3514816 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3514816 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3514816 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3514816 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3514816 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3514816 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3514816 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3514816 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3200480 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3200480 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 3200480 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3200480 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3200480 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3200480 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3200480 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3200480 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3200480 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3200480 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3200480 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3200480 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 0 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1757920 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1757920 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 1757920 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1757920 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1757920 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1757920 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1757920 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1757920 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1757920 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1757920 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1757920 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 1757920 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1757920 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1757920 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 1757920 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1757920 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1757920 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1757920 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1757920 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1757920 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1757920 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1757920 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1757920 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 1757920 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1757920 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1757920 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 1757920 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1757920 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1757920 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1757920 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1757920 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1757920 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1757920 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1757920 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1757920 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 1757920 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
      n1: 10795736 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 10795736 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 10795736 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 10795736 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 10795736 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 10795736 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 10795736 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 10795736 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 10795736 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 10795736 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 10795736 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 10795736 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 10795736 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 10795736 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 9831144 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                     n1: 9831144 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                      n1: 9831144 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831144 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831144 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831144 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831144 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831144 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831144 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831144 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831144 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 964592 in 2 places, all below massif's threshold (1.00%)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 245830 in 1 place, below massif's threshold (1.00%)
    n2: 21520608 0x5DA3F09: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 21520608 0x5DABC5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 21520608 0x5DA4E74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DA35BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x6106847: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x6106917: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60BD750: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6060FA2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x6024B8D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FD385C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FB1CE2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5F90151: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F5169C: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F51A2C: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F50DCD: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59CFFF1: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59D00AD: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59C7CE6: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59B9730: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59A70EF: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x59911C4: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x597CE59: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x5964B6D: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x5955980: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AA585C: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x778D30A: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 314336 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 16408576 0x59644E0: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:204)
     n2: 16392192 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n2: 16392192 0x61FF257: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:15)
       n1: 16384000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 16384000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 16384000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 16384000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 16384000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 16384000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 16384000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 16384000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 16384000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 16384000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 16384000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 16384000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 16384000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 16384000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 16384000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 16384000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 16384000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 16384000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 16384000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 16384000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 16384000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 16384000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 16384000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 16384000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 8192 in 1 place, below massif's threshold (1.00%)
      n0: 0 in 2 places, all below massif's threshold (1.00%)
     n0: 16384 in 2 places, all below massif's threshold (1.00%)
    n0: 8192 in 2 places, all below massif's threshold (1.00%)
   n1: 33906443 0x59EEB76: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 33906443 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 33884659 0x59EE513: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 33882699 0x5E39499: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 33882699 0x5E84D7A: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 33882699 0x5E84E08: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 33882699 0x5E84540: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 33882699 0x5E82BDA: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 33882699 0x5E8153D: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 33882699 0x5E80614: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 33882699 0x5E76FD9: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 33882699 0x5E4C61B: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 33882699 0x5E37C7C: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n1: 33882699 0x5DD8630: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 33882699 0x7491E80: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:93)
                  n1: 33882699 0x7491FE7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:102)
                   n1: 33882699 0x74BC067: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 33882699 0x74B01DC: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 33882699 0x74A5120: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 33882699 0x749B9F1: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 33882699 0x74B0299: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 33882699 0x5964F3E: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 33882699 0x8244365: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 33882699 0x8244365: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 33882699 0x8244365: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 33882699 0x8208E61: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 33882699 0x824F478: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 33882699 0x824E72E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 33882699 0x824D65F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 33882699 0x824C366: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
      n0: 1960 in 2 places, all below massif's threshold (1.00%)
     n0: 21784 in 6 places, all below massif's threshold (1.00%)
 n0: 12996551 in 995 places, all below massif's threshold (1.00%)
 n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4294843 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4224792 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4224792 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2562168 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2562168 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2562168 in 156 places, all below massif's threshold (1.00%)
        n1: 1620736 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n1: 1620736 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n0: 1620736 in 13 places, all below massif's threshold (1.00%)
        n0: 41888 in 1 place, below massif's threshold (1.00%)
      n0: 70051 in 6 places, all below massif's threshold (1.00%)
 n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 3993350 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 3993350 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 3993350 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 3993350 0x273DD4: r_object (marshal.c:1153)
          n1: 3493097 0x274660: r_object (marshal.c:1215)
           n2: 3493097 0x274241: r_object (marshal.c:1391)
            n1: 3254122 0x27477A: r_object (marshal.c:1215)
             n2: 3254122 0x274241: r_object (marshal.c:1391)
              n2: 1887155 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1884059 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1884059 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1884059 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1884059 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1884059 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1884059 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1884059 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1884059 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1884059 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1884059 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1884059 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1884059 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1884059 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1366967 in 7 places, all below massif's threshold (1.00%)
            n0: 238975 in 8 places, all below massif's threshold (1.00%)
          n0: 500253 in 6 places, all below massif's threshold (1.00%)
 n1: 3137568 0x7567CD2: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 3137568 0x756810D: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 3137568 0x59EEB58: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n2: 3137568 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 3137568 0x5B34040: void arcticdb::CursoredBuffer<arcticdb::Buffer>::ensure<long>(unsigned long) (cursored_buffer.hpp:53)
      n2: 1568784 0x61FF2A6: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:19)
       n1: 1568000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 1568000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 1568000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 1568000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 1568000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 1568000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 1568000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 1568000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 1568000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 1568000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 1568000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 1568000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 1568000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 1568000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 1568000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 1568000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 1568000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 1568000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 1568000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 1568000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 1568000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 1568000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 1568000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 1568000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 784 in 1 place, below massif's threshold (1.00%)
      n2: 1568784 0x61FF2ED: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:22)
       n1: 1568000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 1568000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 1568000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 1568000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 1568000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 1568000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 1568000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 1568000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 1568000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 1568000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 1568000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 1568000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 1568000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 1568000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 1568000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 1568000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 1568000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 1568000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 1568000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 1568000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 1568000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 1568000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 1568000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 1568000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 784 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2633456 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2633456 in 10 places, all below massif's threshold (1.00%)
 n1: 1585112 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1585112 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1585112 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1585112 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n1: 1585112 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n0: 1585112 in 7 places, all below massif's threshold (1.00%)
 n1: 1408352 0x755F90D: __gnu_cxx::new_allocator<arcticdb::pipelines::SliceAndKey>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1408352 0x75597D6: allocate (allocator.h:185)
   n1: 1408352 0x75597D6: std::allocator_traits<std::allocator<arcticdb::pipelines::SliceAndKey> >::allocate(std::allocator<arcticdb::pipelines::SliceAndKey>&, unsigned long) (alloc_traits.h:464)
    n2: 1408352 0x7556F25: std::_Vector_base<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> >::_M_allocate(unsigned long) (stl_vector.h:346)
     n1: 1408352 0x77A3E18: void std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> >::_M_range_insert<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, std::forward_iterator_tag) (vector.tcc:769)
      n1: 1408352 0x7787BA6: void std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, std::__false_type) (stl_vector.h:1665)
       n1: 1408352 0x777872B: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> >::insert<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, void>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey const*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (stl_vector.h:1383)
        n1: 1408352 0x76EB039: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:885)
         n1: 1408352 0x7717F98: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1593)
          n1: 1408352 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
           n1: 1408352 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
            n1: 1408352 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
             n1: 1408352 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
              n1: 1408352 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
               n1: 1408352 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                n1: 1408352 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                 n1: 1408352 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                  n1: 1408352 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                   n1: 1408352 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n1: 1408352 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                     n1: 1408352 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                      n1: 1408352 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                       n1: 1408352 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1408352 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1408352 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1408352 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1408352 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1408352 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                             n1: 1408352 0x2A0BE0: UnknownInlinedFun (call.c:342)
                              n1: 1408352 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                               n1: 1408352 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                n1: 1408352 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                 n1: 1408352 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                  n1: 1408352 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1408352 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                    n1: 1408352 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1408352 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1408352 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                       n1: 1408352 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                        n1: 1408352 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                         n1: 1408352 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                          n1: 1408352 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                           n1: 1408352 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1408352 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                             n1: 1408352 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1408352 0x362E55: _PyEval_Vector (ceval.c:5067)
                                               n1: 1408352 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                n1: 1408352 0x389AE7: run_eval_code_obj.lto_priv.0 (pythonrun.c:1291)
                                                 n1: 1408352 0x3842EE: run_mod.lto_priv.0 (pythonrun.c:1312)
                                                  n1: 1408352 0x389884: pyrun_file.lto_priv.0 (pythonrun.c:1208)
                                                   n0: 1408352 0x388E67: _PyRun_SimpleFileObject (pythonrun.c:456)
     n0: 0 in 1 place, below massif's threshold (1.00%)
#-----------
snapshot=24
#-----------
time=1246675742562
mem_heap_B=135933004
mem_heap_extra_B=1592268
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=25
#-----------
time=1297460038957
mem_heap_B=135897857
mem_heap_extra_B=1600575
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=26
#-----------
time=1372342553061
mem_heap_B=184791271
mem_heap_extra_B=1454521
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=27
#-----------
time=1419274531648
mem_heap_B=140669111
mem_heap_extra_B=1462713
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=28
#-----------
time=1486622410331
mem_heap_B=176192344
mem_heap_extra_B=1609816
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=29
#-----------
time=1535016429989
mem_heap_B=135216803
mem_heap_extra_B=1602725
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=30
#-----------
time=1592949399710
mem_heap_B=160016668
mem_heap_extra_B=1588268
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=31
#-----------
time=1665797069514
mem_heap_B=184326344
mem_heap_extra_B=1457816
mem_stacks_B=0
heap_tree=detailed
n8: 184326344 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 139010184 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 139010184 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n5: 107925306 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 43026496 0x5DA3F09: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 43026496 0x5DABC5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 43026496 0x5DA4E74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 42412544 0x5DA35BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 42412544 0x6106847: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 42412544 0x6106917: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 42412544 0x60BD750: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 42412544 0x6060FA2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 42412544 0x6024B8D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 42412544 0x5FD385C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 42412544 0x5FB1CE2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 42412544 0x5F90151: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 42412544 0x5F5169C: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 42412544 0x5F51A2C: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 42412544 0x5F50DCD: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 42412544 0x59CFFF1: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 42412544 0x59D00AD: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 42412544 0x59C7CE6: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 42412544 0x59B9730: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 42412544 0x59A70EF: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 42412544 0x59911C4: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 42412544 0x597CE59: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 42412544 0x5964B6D: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 42412544 0x5955980: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 42412544 0x5AA585C: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 42412544 0x778D30A: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 42412544 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 613952 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 36606462 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 36380412 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n8: 24665300 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 4297572 in 6 places, all below massif's threshold (1.00%)
       n1: 3814432 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3814432 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 3814432 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3814432 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3814432 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3814432 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3814432 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3814432 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3814432 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3814432 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3814432 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3814432 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 613952 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3814432 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3814432 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 3814432 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3814432 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3814432 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3814432 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3814432 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3814432 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3814432 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3814432 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3814432 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3814432 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 613952 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3814432 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3814432 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 3814432 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3814432 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3814432 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3814432 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3814432 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3814432 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3814432 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3814432 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3814432 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3814432 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 613952 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3200480 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3200480 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 3200480 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3200480 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3200480 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3200480 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3200480 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3200480 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3200480 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3200480 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3200480 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3200480 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 0 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1907984 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1907984 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 1907984 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1907984 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1907984 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1907984 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1907984 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1907984 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1907984 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1907984 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1907984 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1907984 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1907984 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1907984 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1907984 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 1907984 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1907984 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1907984 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1907984 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1907984 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1907984 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1907984 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1907984 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1907984 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1907984 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1907984 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1907984 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1907984 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 1907984 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1907984 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1907984 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1907984 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1907984 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1907984 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1907984 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1907984 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1907984 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1907984 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1907984 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
      n1: 11715112 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 11715112 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 11715112 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 11715112 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 11715112 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 11715112 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 11715112 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 11715112 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 11715112 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 11715112 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 11715112 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 11715112 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 11715112 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 11715112 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 9831144 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                     n1: 9831144 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                      n1: 9831144 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831144 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831144 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831144 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831144 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831144 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831144 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831144 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831144 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 1883968 in 2 places, all below massif's threshold (1.00%)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 226050 in 1 place, below massif's threshold (1.00%)
    n3: 26296320 0x59644E0: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:204)
     n2: 16396288 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n2: 16396288 0x61FF257: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:15)
       n1: 16384000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 16384000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 16384000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 16384000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 16384000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 16384000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 16384000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 16384000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 16384000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 16384000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 16384000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 16384000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 16384000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 16384000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 16384000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 16384000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 16384000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 16384000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 16384000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 16384000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 16384000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 16384000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 16384000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 16384000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 12288 in 1 place, below massif's threshold (1.00%)
      n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 9895936 0x61F79C4: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_aligned_bytes(unsigned long) (cursored_buffer.hpp:61)
      n1: 9895936 0x61F4C44: arcticdb::StringBlock::insert(char const*, unsigned long) (string_pool.cpp:38)
       n2: 9895936 0x61F5307: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:148)
        n1: 9875456 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
         n1: 9875456 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
          n1: 9875456 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
           n1: 9875456 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
            n1: 9875456 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
             n1: 9875456 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
              n1: 9875456 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
               n1: 9875456 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                n1: 9875456 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                 n1: 9875456 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                  n1: 9875456 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                   n1: 9875456 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                    n1: 9875456 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                     n1: 9875456 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                      n1: 9875456 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                       n1: 9875456 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                        n1: 9875456 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                         n1: 9875456 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                          n1: 9875456 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                           n1: 9875456 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                            n1: 9875456 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                             n1: 9875456 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                              n0: 9875456 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
        n0: 20480 in 1 place, below massif's threshold (1.00%)
     n0: 4096 in 1 place, below massif's threshold (1.00%)
    n1: 1987836 0x5964637: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:221)
     n1: 1987836 0x5AE4684: void arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure<unsigned char>(unsigned long) (cursored_buffer.hpp:53)
      n1: 1987836 0x5F1A71A: arcticdb::Column::append(arcticdb::Column const&, long) (column.cpp:254)
       n1: 1987836 0x5F513B4: arcticdb::SegmentInMemoryImpl::append(arcticdb::SegmentInMemoryImpl const&) (memory_segment_impl.cpp:70)
        n1: 1987836 0x622B69E: arcticdb::SegmentInMemory::append(arcticdb::SegmentInMemory const&) (memory_segment.hpp:200)
         n1: 1987836 0x776C953: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:88)
          n1: 1987836 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
           n1: 1987836 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
            n1: 1987836 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
             n1: 1987836 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
              n1: 1987836 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
               n1: 1987836 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                n1: 1987836 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                 n1: 1987836 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                  n1: 1987836 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                   n1: 1987836 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                    n1: 1987836 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                     n1: 1987836 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                      n1: 1987836 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                       n1: 1987836 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                        n1: 1987836 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                         n1: 1987836 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                          n1: 1987836 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                           n1: 1987836 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                            n1: 1987836 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                             n1: 1987836 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                              n0: 1987836 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
    n0: 8192 in 1 place, below massif's threshold (1.00%)
   n1: 31084878 0x59EEB76: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 31084878 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 31041950 0x59EE513: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 31039990 0x5E39499: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 31039990 0x5E84D7A: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 31039990 0x5E84E08: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 31039990 0x5E84540: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 31039990 0x5E82BDA: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 31039990 0x5E8153D: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 31039990 0x5E80614: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 31039990 0x5E76FD9: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 31039990 0x5E4C61B: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 31039990 0x5E37C7C: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n1: 31039990 0x5DD8630: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 31039990 0x7491E80: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:93)
                  n1: 31039990 0x7491FE7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:102)
                   n1: 31039990 0x74BC067: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 31039990 0x74B01DC: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 31039990 0x74A5120: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 31039990 0x749B9F1: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 31039990 0x74B0299: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 31039990 0x5964F3E: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 31039990 0x8244365: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 31039990 0x8244365: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 31039990 0x8244365: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 31039990 0x8208E61: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 31039990 0x824F478: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 31039990 0x824E72E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 31039990 0x824D65F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 31039990 0x824C366: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
      n0: 1960 in 2 places, all below massif's threshold (1.00%)
     n0: 42928 in 6 places, all below massif's threshold (1.00%)
 n0: 14466015 in 995 places, all below massif's threshold (1.00%)
 n1: 12590592 0x5A13126: __gnu_cxx::new_allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 12590592 0x5A120D4: allocate (allocator.h:185)
   n1: 12590592 0x5A120D4: std::allocator_traits<std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::allocate(std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >&, unsigned long) (alloc_traits.h:464)
    n1: 12590592 0x5A108D3: std::_Vector_base<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::_M_allocate(unsigned long) (stl_vector.h:346)
     n1: 12590592 0x61FB394: void std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::_M_realloc_insert<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (vector.tcc:440)
      n1: 12590592 0x61FA943: std::pair<std::basic_string_view<char, std::char_traits<char> >, long>& std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::emplace_back<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (vector.tcc:121)
       n1: 12590592 0x61F95D2: std::pair<__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, bool> ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::emplace<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1490)
        n1: 12590592 0x61F7E95: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::insert(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1316)
         n2: 12590592 0x61F5384: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:151)
          n1: 12582912 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
           n1: 12582912 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
            n1: 12582912 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
             n1: 12582912 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
              n1: 12582912 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
               n1: 12582912 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
                n1: 12582912 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                 n1: 12582912 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                  n1: 12582912 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                   n1: 12582912 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                    n1: 12582912 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                     n1: 12582912 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                      n1: 12582912 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                       n1: 12582912 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                        n1: 12582912 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                         n1: 12582912 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 12582912 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 12582912 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 12582912 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 12582912 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n1: 12582912 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                               n0: 12582912 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
          n0: 7680 in 1 place, below massif's threshold (1.00%)
 n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4294843 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4224792 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n2: 4224792 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2562168 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2562168 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2562168 in 156 places, all below massif's threshold (1.00%)
        n0: 1662624 in 2 places, all below massif's threshold (1.00%)
      n0: 70051 in 6 places, all below massif's threshold (1.00%)
 n1: 4199552 0x5A11FBD: __gnu_cxx::new_allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 4199552 0x5A0F338: allocate (allocator.h:185)
   n2: 4199552 0x5A0F338: std::allocator_traits<std::allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard> >::allocate(std::allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard>&, unsigned long) (alloc_traits.h:464)
    n1: 4196864 0x5A0F792: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::allocate_buckets_from_shift() (unordered_dense.h:923)
     n1: 4196864 0x61F98C7: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::increase_size() (unordered_dense.h:956)
      n1: 4196864 0x61F95B7: std::pair<__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, bool> ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::emplace<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1485)
       n1: 4196864 0x61F7E95: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::insert(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1316)
        n2: 4196864 0x61F5384: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:151)
         n1: 4194304 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
          n1: 4194304 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
           n1: 4194304 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
            n1: 4194304 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
             n1: 4194304 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
              n1: 4194304 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
               n1: 4194304 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                n1: 4194304 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                 n1: 4194304 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                  n1: 4194304 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                   n1: 4194304 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                    n1: 4194304 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                     n1: 4194304 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                      n1: 4194304 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                       n1: 4194304 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                        n1: 4194304 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                         n1: 4194304 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                          n1: 4194304 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                           n1: 4194304 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                            n1: 4194304 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                             n1: 4194304 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                              n1: 4194304 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                               n0: 4194304 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
         n0: 2560 in 1 place, below massif's threshold (1.00%)
    n0: 2688 in 2 places, all below massif's threshold (1.00%)
 n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 3993350 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 3993350 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 3993350 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 3993350 0x273DD4: r_object (marshal.c:1153)
          n1: 3493097 0x274660: r_object (marshal.c:1215)
           n2: 3493097 0x274241: r_object (marshal.c:1391)
            n1: 3254122 0x27477A: r_object (marshal.c:1215)
             n2: 3254122 0x274241: r_object (marshal.c:1391)
              n2: 1887155 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1884059 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1884059 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1884059 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1884059 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1884059 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1884059 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1884059 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1884059 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1884059 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1884059 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1884059 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1884059 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1884059 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1366967 in 7 places, all below massif's threshold (1.00%)
            n0: 238975 in 8 places, all below massif's threshold (1.00%)
          n0: 500253 in 6 places, all below massif's threshold (1.00%)
 n1: 3138352 0x7567CD2: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 3138352 0x756810D: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 3138352 0x59EEB58: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n2: 3138352 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n1: 3138352 0x5B34040: void arcticdb::CursoredBuffer<arcticdb::Buffer>::ensure<long>(unsigned long) (cursored_buffer.hpp:53)
      n0: 3138352 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2633456 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2633456 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=32
#-----------
time=1715909674464
mem_heap_B=188951211
mem_heap_extra_B=1458381
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=33
#-----------
time=1772646508725
mem_heap_B=182484361
mem_heap_extra_B=1454967
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=34
#-----------
time=1805761087369
mem_heap_B=168207515
mem_heap_extra_B=1591269
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=35
#-----------
time=1855645859709
mem_heap_B=163786353
mem_heap_extra_B=1594559
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=36
#-----------
time=1897180471390
mem_heap_B=182647314
mem_heap_extra_B=1453318
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=37
#-----------
time=1964624971543
mem_heap_B=185625969
mem_heap_extra_B=1456711
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=2019672973958
mem_heap_B=185762411
mem_heap_extra_B=1455989
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=39
#-----------
time=2057689913762
mem_heap_B=133263686
mem_heap_extra_B=1753906
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=40
#-----------
time=2102778579560
mem_heap_B=165734387
mem_heap_extra_B=1599861
mem_stacks_B=0
heap_tree=detailed
n6: 165734387 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 134301740 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 134301740 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n4: 71950410 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 34013034 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 33772816 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n8: 22977080 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 3958392 in 6 places, all below massif's threshold (1.00%)
       n1: 3514816 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3514816 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 3514816 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3514816 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3514816 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3514816 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3514816 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3514816 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3514816 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3514816 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3514816 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3514816 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3514816 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3514816 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 3514816 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3514816 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3514816 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3514816 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3514816 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3514816 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3514816 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3514816 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3514816 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3514816 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3514816 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3514816 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 3514816 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3514816 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3514816 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3514816 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3514816 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3514816 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3514816 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3514816 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3514816 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3514816 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3200480 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3200480 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 3200480 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3200480 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3200480 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3200480 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3200480 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3200480 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3200480 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3200480 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3200480 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3200480 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 0 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1757920 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1757920 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 1757920 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1757920 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1757920 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1757920 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1757920 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1757920 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1757920 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1757920 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1757920 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1757920 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1757920 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1757920 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1757920 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 1757920 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1757920 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1757920 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1757920 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1757920 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1757920 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1757920 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1757920 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1757920 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1757920 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1757920 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1757920 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1757920 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 1757920 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1757920 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1757920 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1757920 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1757920 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1757920 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1757920 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1757920 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1757920 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1757920 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1757920 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
      n1: 10795736 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 10795736 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 10795736 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 10795736 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 10795736 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 10795736 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 10795736 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 10795736 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 10795736 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 10795736 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 10795736 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 10795736 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 10795736 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 10795736 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 9831144 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                     n1: 9831144 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                      n1: 9831144 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831144 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831144 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831144 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831144 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831144 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831144 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831144 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831144 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 964592 in 2 places, all below massif's threshold (1.00%)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 240218 in 1 place, below massif's threshold (1.00%)
    n2: 21520608 0x5DA3F09: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 21520608 0x5DABC5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 21520608 0x5DA4E74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DA35BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x6106847: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x6106917: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60BD750: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6060FA2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x6024B8D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FD385C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FB1CE2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5F90151: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F5169C: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F51A2C: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F50DCD: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59CFFF1: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59D00AD: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59C7CE6: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59B9730: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59A70EF: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x59911C4: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x597CE59: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x5964B6D: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x5955980: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AA585C: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x778D30A: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 314336 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 16408576 0x59644E0: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:204)
     n2: 16392192 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n2: 16392192 0x61FF257: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:15)
       n1: 16384000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 16384000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 16384000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 16384000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 16384000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 16384000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 16384000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 16384000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 16384000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 16384000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 16384000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 16384000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 16384000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 16384000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 16384000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 16384000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 16384000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 16384000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 16384000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 16384000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 16384000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 16384000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 16384000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 16384000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 8192 in 1 place, below massif's threshold (1.00%)
      n0: 0 in 2 places, all below massif's threshold (1.00%)
     n0: 16384 in 2 places, all below massif's threshold (1.00%)
    n0: 8192 in 2 places, all below massif's threshold (1.00%)
   n1: 62351330 0x59EEB76: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n3: 62351330 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 33087653 0x59EE513: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 33085693 0x5E39499: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 33085693 0x5E84D7A: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 33085693 0x5E84E08: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 33085693 0x5E84540: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 33085693 0x5E82BDA: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 33085693 0x5E8153D: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 33085693 0x5E80614: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 33085693 0x5E76FD9: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 33085693 0x5E4C61B: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 33085693 0x5E37C7C: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n1: 33085693 0x5DD8630: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 33085693 0x7491E80: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:93)
                  n1: 33085693 0x7491FE7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:102)
                   n1: 33085693 0x74BC067: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 33085693 0x74B01DC: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 33085693 0x74A5120: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 33085693 0x749B9F1: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 33085693 0x74B0299: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 33085693 0x5964F3E: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 33085693 0x8244365: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 33085693 0x8244365: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 33085693 0x8244365: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 33085693 0x8208E61: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 33085693 0x824F478: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 33085693 0x824E72E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 33085693 0x824D65F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 33085693 0x824C366: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
      n0: 1960 in 2 places, all below massif's threshold (1.00%)
     n1: 29241893 0x5ECBFAB: arcticdb::Segment::serialize_v1_header_to_buffer(unsigned long) (segment.cpp:283)
      n1: 29241893 0x5ECC254: arcticdb::Segment::serialize_header_v1() (segment.cpp:301)
       n1: 29241893 0x5ECC306: arcticdb::Segment::serialize_header() (segment.cpp:307)
        n1: 29241893 0x7B555C3: arcticdb::storage::s3::RealS3Client::put_object(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::Segment&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_real_client.cpp:144)
         n1: 29241893 0x7B67F72: auto arcticdb::storage::s3::detail::do_write_impl<arcticdb::storage::object_store_utils::FlatBucketizer>(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper&, arcticdb::storage::object_store_utils::FlatBucketizer&&)::{lambda(auto:1&&)#2}::operator()<folly::gen::Group<arcticdb::entity::KeyType, arcticdb::storage::KeySegmentPair> >(arcticdb::storage::object_store_utils::FlatBucketizer&&) const (detail-inl.hpp:121)
          n1: 29241893 0x7B67D94: folly::gen::GenImpl<folly::gen::Group<arcticdb::entity::KeyType, arcticdb::storage::KeySegmentPair>&&, folly::gen::detail::GroupBy<arcticdb::storage::s3::detail::do_write_impl<arcticdb::storage::object_store_utils::FlatBucketizer>(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper&, arcticdb::storage::object_store_utils::FlatBucketizer&&)::{lambda(auto:1&&)#1}>::Generator<arcticdb::storage::KeySegmentPair const&&, folly::gen::detail::Map<folly::gen::Move>::Generator<arcticdb::storage::KeySegmentPair const&, folly::gen::detail::CopiedSource<arcticdb::storage::KeySegmentPair, std::vector<arcticdb::storage::KeySegmentPair, std::allocator<arcticdb::storage::KeySegmentPair> > >, arcticdb::storage::KeySegmentPair const&&>, arcticdb::storage::KeySegmentPair, arcticdb::entity::KeyType, arcticdb::entity::KeyType> >::foreach<arcticdb::storage::s3::detail::do_write_impl<arcticdb::storage::object_store_utils::FlatBucketizer>(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper&, arcticdb::storage::object_store_utils::FlatBucketizer&&)::{lambda(auto:1&&)#2}>(arcticdb::storage::object_store_utils::FlatBucketizer&&) const::{lambda(folly::gen::Group<arcticdb::entity::KeyType, arcticdb::storage::KeySegmentPair>&&)#1}::operator()(folly::gen::Group<arcticdb::entity::KeyType, arcticdb::storage::KeySegmentPair>&&) const (Core-inl.h:173)
           n1: 29241893 0x7B69372: bool folly::gen::detail::GroupBy<arcticdb::storage::s3::detail::do_write_impl<arcticdb::storage::object_store_utils::FlatBucketizer>(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper&, arcticdb::storage::object_store_utils::FlatBucketizer&&)::{lambda(auto:1&&)#1}>::Generator<arcticdb::storage::KeySegmentPair const&&, folly::gen::detail::Map<folly::gen::Move>::Generator<arcticdb::storage::KeySegmentPair const&, folly::gen::detail::CopiedSource<arcticdb::storage::KeySegmentPair, std::vector<arcticdb::storage::KeySegmentPair, std::allocator<arcticdb::storage::KeySegmentPair> > >, arcticdb::storage::KeySegmentPair const&&>, arcticdb::storage::KeySegmentPair, arcticdb::entity::KeyType, arcticdb::entity::KeyType>::apply<folly::gen::GenImpl<folly::gen::Group<arcticdb::entity::KeyType, arcticdb::storage::KeySegmentPair>&&, folly::gen::detail::GroupBy<arcticdb::storage::s3::detail::do_write_impl<arcticdb::storage::object_store_utils::FlatBucketizer>(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper&, arcticdb::storage::object_store_utils::FlatBucketizer&&)::{lambda(auto:1&&)#1}>::Generator<arcticdb::storage::KeySegmentPair const&&, folly::gen::detail::Map<folly::gen::Move>::Generator<arcticdb::storage::KeySegmentPair const&, folly::gen::detail::CopiedSource<arcticdb::storage::KeySegmentPair, std::vector<arcticdb::storage::KeySegmentPair, std::allocator<arcticdb::storage::KeySegmentPair> > >, arcticdb::storage::KeySegmentPair const&&>, arcticdb::storage::KeySegmentPair, arcticdb::entity::KeyType, arcticdb::entity::KeyType> >::foreach<arcticdb::storage::s3::detail::do_write_impl<arcticdb::storage::object_store_utils::FlatBucketizer>(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper&, arcticdb::storage::object_store_utils::FlatBucketizer&&)::{lambda(auto:1&&)#2}>(arcticdb::storage::object_store_utils::FlatBucketizer&&) const::{lambda(folly::gen::Group<arcticdb::entity::KeyType, arcticdb::storage::KeySegmentPair>&&)#1}>(arcticdb::storage::object_store_utils::FlatBucketizer&&) const (Base-inl.h:1164)
            n1: 29241893 0x7B680EE: void folly::gen::GenImpl<folly::gen::Group<arcticdb::entity::KeyType, arcticdb::storage::KeySegmentPair>&&, folly::gen::detail::GroupBy<arcticdb::storage::s3::detail::do_write_impl<arcticdb::storage::object_store_utils::FlatBucketizer>(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper&, arcticdb::storage::object_store_utils::FlatBucketizer&&)::{lambda(auto:1&&)#1}>::Generator<arcticdb::storage::KeySegmentPair const&&, folly::gen::detail::Map<folly::gen::Move>::Generator<arcticdb::storage::KeySegmentPair const&, folly::gen::detail::CopiedSource<arcticdb::storage::KeySegmentPair, std::vector<arcticdb::storage::KeySegmentPair, std::allocator<arcticdb::storage::KeySegmentPair> > >, arcticdb::storage::KeySegmentPair const&&>, arcticdb::storage::KeySegmentPair, arcticdb::entity::KeyType, arcticdb::entity::KeyType> >::foreach<arcticdb::storage::s3::detail::do_write_impl<arcticdb::storage::object_store_utils::FlatBucketizer>(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper&, arcticdb::storage::object_store_utils::FlatBucketizer&&)::{lambda(auto:1&&)#2}>(arcticdb::storage::object_store_utils::FlatBucketizer&&) const (Core-inl.h:171)
             n1: 29241893 0x7B66C89: void arcticdb::storage::s3::detail::do_write_impl<arcticdb::storage::object_store_utils::FlatBucketizer>(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper&, arcticdb::storage::object_store_utils::FlatBucketizer&&) (detail-inl.hpp:110)
              n1: 29241893 0x7B64E4C: arcticdb::storage::s3::S3Storage::do_write(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&) (s3_storage.cpp:50)
               n1: 29241893 0x748DE2D: arcticdb::storage::Storage::write(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&) (storage.hpp:103)
                n1: 29241893 0x748E6E8: arcticdb::storage::Storages::write(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&) (storages.hpp:46)
                 n1: 29241893 0x74907E9: arcticdb::storage::Library::write(arcticdb::Composite<arcticdb::storage::KeySegmentPair>&&) (library.hpp:90)
                  n1: 29241893 0x7492577: arcticdb::async::WriteSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:182)
                   n1: 29241893 0x74E3026: folly::futures::detail::wrapInvoke<arcticdb::storage::KeySegmentPair, arcticdb::async::WriteSegmentTask>(folly::Try<arcticdb::storage::KeySegmentPair>&&, arcticdb::async::WriteSegmentTask&&)::{lambda()#1}::operator()() const (Future-inl.h:96)
                    n1: 29241893 0x74E6321: folly::Try<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > folly::futures::detail::InvokeResultWrapperBase<folly::Try<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >::wrapResult<folly::futures::detail::wrapInvoke<arcticdb::storage::KeySegmentPair, arcticdb::async::WriteSegmentTask>(folly::Try<arcticdb::storage::KeySegmentPair>&&, arcticdb::async::WriteSegmentTask&&)::{lambda()#1}>(folly::futures::detail::wrapInvoke<arcticdb::storage::KeySegmentPair, arcticdb::async::WriteSegmentTask>(folly::Try<arcticdb::storage::KeySegmentPair>&&, arcticdb::async::WriteSegmentTask&&)::{lambda()#1}) (Future-inl.h:68)
                     n1: 29241893 0x74E30EA: auto folly::futures::detail::wrapInvoke<arcticdb::storage::KeySegmentPair, arcticdb::async::WriteSegmentTask>(folly::Try<arcticdb::storage::KeySegmentPair>&&, arcticdb::async::WriteSegmentTask&&) (Future-inl.h:103)
                      n1: 29241893 0x74E2FBA: folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}::operator()(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&) (Future-inl.h:988)
                       n1: 29241893 0x74E666C: auto folly::futures::detail::CoreCallbackState<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}>::invoke<folly::Executor::KeepAlive<folly::Executor>, folly::Try<arcticdb::storage::KeySegmentPair> >(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&) (Future-inl.h:139)
                        n1: 29241893 0x74E66EB: decltype(auto) folly::futures::detail::detail_msvc_15_7_workaround::invoke<folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void>, folly::futures::detail::CoreCallbackState<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}>, arcticdb::storage::KeySegmentPair, 0>(folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void>, folly::futures::detail::CoreCallbackState<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}>&, folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&) (Future-inl.h:332)
                         n1: 29241893 0x74E65D3: folly::futures::detail::FutureBase<arcticdb::storage::KeySegmentPair>::thenImplementation<folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void> >(arcticdb::async::WriteSegmentTask&&, folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void>, folly::futures::detail::InlineContinuation)::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}::operator()(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)::{lambda()#1}::operator()() const (Future-inl.h:379)
                          n1: 29241893 0x74EDAA2: _ZN5folly11makeTryWithIZZNS_7futures6detail10FutureBaseIN8arcticdb7storage14KeySegmentPairEE18thenImplementationIZNOS_6FutureIS6_E9thenValueINS4_5async16WriteSegmentTaskEEENS9_INS2_19valueCallableResultIS6_T_E10value_typeEEEOSF_EUlONS_8Executor9KeepAliveISK_EEONS_3TryIS6_EEE_NS2_25tryExecutorCallableResultIS6_SR_vEEEENSt9enable_ifIXntsrNT0_13ReturnsFutureE5valueENSV_6ReturnEE4typeESJ_SV_NS2_18InlineContinuationEENUlSN_SQ_E_clESN_SQ_EUlvE_EENSU_IXsrNS_5isTryINS_13invoke_detail6traitsISF_E6resultIEEEE5valueES18_E4typeESJ_ (Try-inl.h:285)
                           n1: 29241893 0x74E64C4: folly::futures::detail::FutureBase<arcticdb::storage::KeySegmentPair>::thenImplementation<folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void> >(arcticdb::async::WriteSegmentTask&&, folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void>, folly::futures::detail::InlineContinuation)::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}::operator()(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&) (Future-inl.h:377)
                            n1: 29241893 0x74F4756: folly::futures::detail::Core<arcticdb::storage::KeySegmentPair>::setCallback<folly::futures::detail::FutureBase<arcticdb::storage::KeySegmentPair>::thenImplementation<folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void> >(arcticdb::async::WriteSegmentTask&&, folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void>, folly::futures::detail::InlineContinuation)::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}>(arcticdb::async::WriteSegmentTask&&, std::shared_ptr<folly::RequestContext>&&, folly::futures::detail::InlineContinuation)::{lambda(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*)#1}::operator()(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*) (Core.h:629)
                             n1: 29241893 0x74FEFBD: void folly::detail::function::FunctionTraits<void (folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*)>::callSmall<folly::futures::detail::Core<arcticdb::storage::KeySegmentPair>::setCallback<folly::futures::detail::FutureBase<arcticdb::storage::KeySegmentPair>::thenImplementation<folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void> >(arcticdb::async::WriteSegmentTask&&, folly::futures::detail::tryExecutorCallableResult<arcticdb::storage::KeySegmentPair, folly::Future<arcticdb::storage::KeySegmentPair>::thenValue<arcticdb::async::WriteSegmentTask>(arcticdb::async::WriteSegmentTask&&) &&::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}, void>, folly::futures::detail::InlineContinuation)::{lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<arcticdb::storage::KeySegmentPair>&&)#1}>(arcticdb::async::WriteSegmentTask&&, std::shared_ptr<folly::RequestContext>&&, folly::futures::detail::InlineContinuation)::{lambda(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*)#1}>(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*, folly::detail::function::Data&) (Function.h:345)
                              n0: 29241893 0x8267C09: folly::detail::function::FunctionTraits<void (folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*)>::operator()(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*) (Function.h:374)
     n0: 21784 in 5 places, all below massif's threshold (1.00%)
 n0: 15277322 in 997 places, all below massif's threshold (1.00%)
 n1: 5233676 0x7567CD2: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 5233676 0x756810D: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 5233676 0x59EEB58: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n3: 5233676 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n1: 3137568 0x5B34040: void arcticdb::CursoredBuffer<arcticdb::Buffer>::ensure<long>(unsigned long) (cursored_buffer.hpp:53)
      n0: 3137568 in 2 places, all below massif's threshold (1.00%)
     n1: 2096108 0x7B574BA: arcticdb::storage::s3::S3StreamBuffer::xsputn(char const*, long) (s3_real_client.cpp:82)
      n1: 2096108 0xA98F375: std::ostream::write(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
       n1: 2096108 0x89F7A7D: WriteData(char*, unsigned long, unsigned long, void*) (CurlHttpClient.cpp:219)
        n1: 2096108 0x8504E63: chop_write (sendf.c:321)
         n1: 2096108 0x8505208: Curl_client_write (sendf.c:415)
          n1: 2096108 0x8514F91: readwrite_data (transfer.c:709)
           n1: 2096108 0x8515CBF: Curl_readwrite (transfer.c:1133)
            n1: 2096108 0x84FDE1D: multi_runsingle (multi.c:2443)
             n1: 2096108 0x84FE743: curl_multi_perform (multi.c:2740)
              n1: 2096108 0x84ED446: easy_transfer (easy.c:679)
               n1: 2096108 0x84ED6CB: easy_perform (easy.c:769)
                n1: 2096108 0x84ED736: curl_easy_perform (easy.c:788)
                 n1: 2096108 0x89FADB3: Aws::Http::CurlHttpClient::MakeRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::Utils::RateLimits::RateLimiterInterface*, Aws::Utils::RateLimits::RateLimiterInterface*) const (CurlHttpClient.cpp:794)
                  n1: 2096108 0x8A7693F: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}::operator()() const (AWSClient.cpp:554)
                   n1: 2096108 0x8A87AE0: std::shared_ptr<Aws::Http::HttpResponse> std::__invoke_impl<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(std::__invoke_other, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:61)
                    n1: 2096108 0x8A85F36: std::enable_if<std::__and_<std::__not_<std::is_void<std::shared_ptr<Aws::Http::HttpResponse> > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>::type, std::shared_ptr<Aws::Http::HttpResponse> > >::value, std::shared_ptr<Aws::Http::HttpResponse> >::type std::__invoke_r<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:143)
                     n1: 2096108 0x8A83C48: std::_Function_handler<std::shared_ptr<Aws::Http::HttpResponse> (), Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                      n1: 2096108 0x8AAE7DF: std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>::operator()() const (std_function.h:590)
                       n1: 2096108 0x8AA015A: std::shared_ptr<Aws::Http::HttpResponse> smithy::components::tracing::TracingUtils::MakeCallWithTiming<std::shared_ptr<Aws::Http::HttpResponse> >(std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TracingUtils.h:65)
                        n1: 2096108 0x8A775EA: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const (AWSClient.cpp:558)
                         n1: 2096108 0x8A73055: Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:280)
                          n1: 2096108 0x8A78C69: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:645)
                           n1: 2096108 0x8A79157: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:695)
                            n1: 2096108 0x88E8DC8: Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}::operator()() const (S3Client.cpp:1820)
                             n1: 2096108 0x8963984: Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:61)
                              n0: 2096108 0x8953F70: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:143)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4294843 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4224792 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n2: 4224792 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2562168 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2562168 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2562168 in 156 places, all below massif's threshold (1.00%)
        n0: 1662624 in 2 places, all below massif's threshold (1.00%)
      n0: 70051 in 6 places, all below massif's threshold (1.00%)
 n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 3993350 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 3993350 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 3993350 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 3993350 0x273DD4: r_object (marshal.c:1153)
          n1: 3493097 0x274660: r_object (marshal.c:1215)
           n2: 3493097 0x274241: r_object (marshal.c:1391)
            n1: 3254122 0x27477A: r_object (marshal.c:1215)
             n2: 3254122 0x274241: r_object (marshal.c:1391)
              n2: 1887155 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1884059 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1884059 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1884059 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1884059 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1884059 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1884059 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1884059 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1884059 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1884059 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1884059 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1884059 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1884059 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1884059 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1366967 in 7 places, all below massif's threshold (1.00%)
            n0: 238975 in 8 places, all below massif's threshold (1.00%)
          n0: 500253 in 6 places, all below massif's threshold (1.00%)
 n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2633456 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2633456 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=41
#-----------
time=2173417617751
mem_heap_B=160329610
mem_heap_extra_B=1485974
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=42
#-----------
time=2218113417832
mem_heap_B=153141741
mem_heap_extra_B=1485555
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=2290358417001
mem_heap_B=133419107
mem_heap_extra_B=1457005
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=44
#-----------
time=2354090512675
mem_heap_B=149514857
mem_heap_extra_B=1477751
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=45
#-----------
time=2430960220870
mem_heap_B=185745459
mem_heap_extra_B=1459053
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=46
#-----------
time=2501315746654
mem_heap_B=164257419
mem_heap_extra_B=1600293
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=47
#-----------
time=2576102355531
mem_heap_B=165110980
mem_heap_extra_B=1602428
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=48
#-----------
time=2631730233416
mem_heap_B=164543991
mem_heap_extra_B=1601025
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=49
#-----------
time=2690471452908
mem_heap_B=154364100
mem_heap_extra_B=1488012
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=2693690600178
mem_heap_B=165482144
mem_heap_extra_B=1604072
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=51
#-----------
time=2696741313329
mem_heap_B=150910175
mem_heap_extra_B=1481809
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=52
#-----------
time=2699791122694
mem_heap_B=163357501
mem_heap_extra_B=1594627
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=53
#-----------
time=2702857988219
mem_heap_B=153484920
mem_heap_extra_B=1486296
mem_stacks_B=0
heap_tree=detailed
n9: 153484920 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 114175072 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 114175072 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n4: 114130712 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 65152280 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 65152280 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 43569724 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 7029856 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 7029856 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 7029856 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 7029856 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 7029856 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 7029856 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 7029856 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 7029856 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 7029856 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 7029856 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 7029856 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 7029856 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3515040 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 3515040 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 3515040 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 3515040 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 3515040 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 3515040 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 3515040 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 3515040 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 3515040 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 3515040 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 3515040 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 3515040 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 7029856 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 7029856 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 7029856 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 7029856 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 7029856 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 7029856 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 7029856 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 7029856 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 7029856 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 7029856 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 7029856 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 7029856 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3515040 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 3515040 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 3515040 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 3515040 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 3515040 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 3515040 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 3515040 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 3515040 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 3515040 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 3515040 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 3515040 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 3515040 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 7029856 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 7029856 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 7029856 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 7029856 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 7029856 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 7029856 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 7029856 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 7029856 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 7029856 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 7029856 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 7029856 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 7029856 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3515040 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 3515040 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 3515040 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 3515040 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 3515040 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 3515040 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 3515040 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 3515040 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 3515040 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 3515040 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 3515040 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 3515040 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3989344 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3989344 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 3989344 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3989344 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3989344 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3989344 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3989344 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3989344 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3989344 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3989344 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3989344 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3989344 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 788864 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3518256 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3518256 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 3518256 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3518256 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3518256 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3518256 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3518256 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3518256 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3518256 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3518256 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3518256 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 3518256 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1760336 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 1760336 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 1760336 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 1760336 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 1760336 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 1760336 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 1760336 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 1760336 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 1760336 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 1760336 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 1760336 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 1760336 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3518256 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3518256 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 3518256 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3518256 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3518256 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3518256 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3518256 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3518256 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3518256 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3518256 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3518256 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 3518256 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1760336 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 1760336 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 1760336 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 1760336 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 1760336 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 1760336 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 1760336 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 1760336 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 1760336 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 1760336 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 1760336 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 1760336 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3518256 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3518256 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 3518256 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3518256 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3518256 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3518256 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3518256 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3518256 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3518256 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3518256 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3518256 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 3518256 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1760336 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 1760336 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 1760336 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 1760336 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 1760336 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 1760336 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 1760336 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 1760336 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 1760336 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 1760336 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 1760336 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 1760336 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 2653668 in 3 places, all below massif's threshold (1.00%)
       n1: 1762456 0x5DACD6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1762456 0x5DB2C5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 1762456 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1762456 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1762456 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1762456 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1762456 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1762456 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1762456 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1762456 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1762456 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1762456 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1762456 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1762456 0x5DAE3EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1762456 0x5DB2CA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 1762456 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1762456 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1762456 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1762456 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1762456 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1762456 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1762456 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1762456 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1762456 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1762456 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1762456 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1757464 0x5DB05AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1757464 0x5DB2D08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 1757464 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1757464 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1757464 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1757464 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1757464 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1757464 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1757464 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1757464 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1757464 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1757464 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1757464 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
      n1: 21582556 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 21582556 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 21582556 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 21582556 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 21582556 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 21582556 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 21582556 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 21582556 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 21582556 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 21582556 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 21582556 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 21582556 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 21582556 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 21582556 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 10786820 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                     n1: 10786820 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                      n1: 10786820 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                       n1: 10786820 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                        n1: 10786820 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                         n1: 10786820 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                          n1: 10786820 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                           n1: 10786820 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                            n1: 10786820 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                             n1: 10786820 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                              n0: 10786820 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                    n1: 9831144 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                     n1: 9831144 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                      n1: 9831144 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831144 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831144 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831144 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831144 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831144 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831144 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831144 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831144 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 964592 in 1 place, below massif's threshold (1.00%)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n3: 24727552 0x59644E0: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:204)
     n2: 16437248 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n2: 16437248 0x61FF257: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:15)
       n1: 16384000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 16384000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 16384000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 16384000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 16384000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 16384000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 16384000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 16384000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 16384000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 16384000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 16384000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 16384000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 16384000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 16384000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 16384000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 16384000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 16384000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 16384000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 16384000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 16384000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 16384000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 16384000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 16384000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 16384000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 53248 in 1 place, below massif's threshold (1.00%)
      n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 8290304 0x61F79C4: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_aligned_bytes(unsigned long) (cursored_buffer.hpp:61)
      n1: 8290304 0x61F4C44: arcticdb::StringBlock::insert(char const*, unsigned long) (string_pool.cpp:38)
       n2: 8290304 0x61F5307: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:148)
        n1: 8232960 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
         n1: 8232960 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
          n1: 8232960 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
           n1: 8232960 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
            n1: 8232960 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
             n1: 8232960 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
              n1: 8232960 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
               n1: 8232960 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                n1: 8232960 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                 n1: 8232960 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                  n1: 8232960 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                   n1: 8232960 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                    n1: 8232960 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                     n1: 8232960 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                      n1: 8232960 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                       n1: 8232960 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                        n1: 8232960 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                         n1: 8232960 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                          n1: 8232960 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                           n1: 8232960 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                            n1: 8232960 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                             n1: 8232960 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                              n0: 8232960 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
        n0: 57344 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 24246784 0x5DA3F09: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 24246784 0x5DABC5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 24246784 0x5DA4E74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DA35BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x6106847: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x6106917: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60BD750: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6060FA2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x6024B8D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FD385C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FB1CE2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5F90151: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F5169C: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F51A2C: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F50DCD: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59CFFF1: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59D00AD: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59C7CE6: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59B9730: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59A70EF: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x59911C4: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x597CE59: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x5964B6D: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x5955980: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AA585C: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x778D30A: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3040512 0x640EDC1: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:58)
        n1: 3040512 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
         n1: 3040512 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
          n1: 3040512 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
           n1: 3040512 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
            n1: 3040512 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
             n1: 3040512 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
              n1: 3040512 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
               n1: 3040512 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                n1: 3040512 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                 n1: 3040512 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                  n1: 3040512 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                   n1: 3040512 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                    n1: 3040512 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                     n1: 3040512 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                      n1: 3040512 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 3040512 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 3040512 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 3040512 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 3040512 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 3040512 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 3040512 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 3040512 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 3040512 0x289B4A: _PyObject_MakeTpCall (call.c:215)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 4096 in 2 places, all below massif's threshold (1.00%)
   n0: 44360 in 1 place, below massif's threshold (1.00%)
 n0: 13135167 in 994 places, all below massif's threshold (1.00%)
 n1: 6312960 0x5A13126: __gnu_cxx::new_allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 6312960 0x5A120D4: allocate (allocator.h:185)
   n1: 6312960 0x5A120D4: std::allocator_traits<std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::allocate(std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >&, unsigned long) (alloc_traits.h:464)
    n1: 6312960 0x5A108D3: std::_Vector_base<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::_M_allocate(unsigned long) (stl_vector.h:346)
     n1: 6312960 0x61FB394: void std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::_M_realloc_insert<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (vector.tcc:440)
      n1: 6312960 0x61FA943: std::pair<std::basic_string_view<char, std::char_traits<char> >, long>& std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::emplace_back<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (vector.tcc:121)
       n1: 6312960 0x61F95D2: std::pair<__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, bool> ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::emplace<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1490)
        n1: 6312960 0x61F7E95: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::insert(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1316)
         n2: 6312960 0x61F5384: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:151)
          n1: 6291456 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
           n1: 6291456 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
            n1: 6291456 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
             n1: 6291456 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
              n1: 6291456 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
               n1: 6291456 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
                n1: 6291456 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                 n1: 6291456 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                  n1: 6291456 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                   n1: 6291456 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                    n1: 6291456 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                     n1: 6291456 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                      n1: 6291456 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                       n1: 6291456 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                        n1: 6291456 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                         n1: 6291456 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 6291456 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 6291456 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 6291456 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 6291456 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n1: 6291456 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                               n0: 6291456 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
          n0: 21504 in 1 place, below massif's threshold (1.00%)
 n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4294843 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4224792 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4224792 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2562168 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2562168 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2562168 in 156 places, all below massif's threshold (1.00%)
        n1: 1620736 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n1: 1620736 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n0: 1620736 in 13 places, all below massif's threshold (1.00%)
        n0: 41888 in 1 place, below massif's threshold (1.00%)
      n0: 70051 in 6 places, all below massif's threshold (1.00%)
 n1: 4208768 0x5A11FBD: __gnu_cxx::new_allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 4208768 0x5A0F338: allocate (allocator.h:185)
   n2: 4208768 0x5A0F338: std::allocator_traits<std::allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard> >::allocate(std::allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard>&, unsigned long) (alloc_traits.h:464)
    n1: 4201472 0x5A0F792: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::allocate_buckets_from_shift() (unordered_dense.h:923)
     n1: 4201472 0x61F98C7: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::increase_size() (unordered_dense.h:956)
      n1: 4201472 0x61F95B7: std::pair<__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, bool> ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::emplace<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1485)
       n1: 4201472 0x61F7E95: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::insert(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1316)
        n2: 4201472 0x61F5384: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:151)
         n1: 4194304 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
          n1: 4194304 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
           n1: 4194304 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
            n1: 4194304 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
             n1: 4194304 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
              n1: 4194304 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
               n1: 4194304 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                n1: 4194304 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                 n1: 4194304 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                  n1: 4194304 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                   n1: 4194304 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                    n1: 4194304 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                     n1: 4194304 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                      n1: 4194304 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                       n1: 4194304 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                        n1: 4194304 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                         n1: 4194304 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                          n1: 4194304 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                           n1: 4194304 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                            n1: 4194304 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                             n1: 4194304 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                              n1: 4194304 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                               n0: 4194304 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
         n0: 7168 in 1 place, below massif's threshold (1.00%)
    n0: 7296 in 2 places, all below massif's threshold (1.00%)
 n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 3993350 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 3993350 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 3993350 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 3993350 0x273DD4: r_object (marshal.c:1153)
          n1: 3493097 0x274660: r_object (marshal.c:1215)
           n2: 3493097 0x274241: r_object (marshal.c:1391)
            n1: 3254122 0x27477A: r_object (marshal.c:1215)
             n2: 3254122 0x274241: r_object (marshal.c:1391)
              n2: 1887155 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1884059 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1884059 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1884059 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1884059 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1884059 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1884059 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1884059 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1884059 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1884059 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1884059 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1884059 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1884059 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1884059 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1366967 in 7 places, all below massif's threshold (1.00%)
            n0: 238975 in 8 places, all below massif's threshold (1.00%)
          n0: 500253 in 6 places, all below massif's threshold (1.00%)
 n1: 3146192 0x7567CD2: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 3146192 0x756810D: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 3146192 0x59EEB58: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n2: 3146192 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 3146192 0x5B34040: void arcticdb::CursoredBuffer<arcticdb::Buffer>::ensure<long>(unsigned long) (cursored_buffer.hpp:53)
      n2: 1573096 0x61FF2A6: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:19)
       n1: 1568000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 1568000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 1568000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 1568000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 1568000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 1568000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 1568000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 1568000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 1568000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 1568000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 1568000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 1568000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 1568000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 1568000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 1568000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 1568000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 1568000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 1568000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 1568000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 1568000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 1568000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 1568000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 1568000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 1568000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 5096 in 1 place, below massif's threshold (1.00%)
      n2: 1573096 0x61FF2ED: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:22)
       n1: 1568000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 1568000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 1568000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 1568000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 1568000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 1568000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 1568000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 1568000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 1568000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 1568000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 1568000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 1568000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 1568000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 1568000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 1568000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 1568000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 1568000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 1568000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 1568000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 1568000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 1568000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 1568000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 1568000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 1568000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 5096 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2633456 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2633456 in 10 places, all below massif's threshold (1.00%)
 n1: 1585112 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1585112 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1585112 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1585112 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n1: 1585112 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n0: 1585112 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=54
#-----------
time=2706165491747
mem_heap_B=165117487
mem_heap_extra_B=1603753
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=55
#-----------
time=2709215796462
mem_heap_B=150628115
mem_heap_extra_B=1482965
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=56
#-----------
time=2712265613143
mem_heap_B=167591177
mem_heap_extra_B=1593759
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=57
#-----------
time=2715315858540
mem_heap_B=153435759
mem_heap_extra_B=1485881
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=58
#-----------
time=2718577775629
mem_heap_B=164861201
mem_heap_extra_B=1602967
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=59
#-----------
time=2721628452142
mem_heap_B=153220362
mem_heap_extra_B=1484942
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=60
#-----------
time=2725022268935
mem_heap_B=165042143
mem_heap_extra_B=1603537
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=61
#-----------
time=2728072380377
mem_heap_B=152542306
mem_heap_extra_B=1485438
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=62
#-----------
time=2731356118642
mem_heap_B=163664043
mem_heap_extra_B=1600157
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=63
#-----------
time=2734406465818
mem_heap_B=153177070
mem_heap_extra_B=1485394
mem_stacks_B=0
heap_tree=detailed
n9: 153177070 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 113865672 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 113865672 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n4: 113821392 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 65215736 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 65215736 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 43670400 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 7017728 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 7017728 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 7017728 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 7017728 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 7017728 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 7017728 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 7017728 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 7017728 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 7017728 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 7017728 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 7017728 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 7017728 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3502912 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 3502912 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 3502912 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 3502912 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 3502912 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 3502912 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 3502912 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 3502912 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 3502912 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 3502912 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 3502912 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 3502912 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 7017728 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 7017728 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 7017728 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 7017728 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 7017728 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 7017728 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 7017728 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 7017728 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 7017728 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 7017728 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 7017728 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 7017728 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3502912 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 3502912 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 3502912 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 3502912 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 3502912 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 3502912 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 3502912 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 3502912 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 3502912 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 3502912 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 3502912 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 3502912 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 7017728 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 7017728 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 7017728 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 7017728 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 7017728 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 7017728 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 7017728 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 7017728 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 7017728 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 7017728 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 7017728 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 7017728 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3502912 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 3502912 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 3502912 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 3502912 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 3502912 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 3502912 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 3502912 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 3502912 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 3502912 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 3502912 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 3502912 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 3502912 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 4158240 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4158240 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 4158240 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4158240 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4158240 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4158240 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4158240 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4158240 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4158240 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 4158240 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 4158240 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4158240 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 957760 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3512192 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3512192 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 3512192 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3512192 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3512192 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3512192 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3512192 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3512192 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3512192 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3512192 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3512192 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 3512192 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1754272 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 1754272 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 1754272 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 1754272 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 1754272 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 1754272 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 1754272 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 1754272 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 1754272 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 1754272 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 1754272 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 1754272 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3512192 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3512192 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 3512192 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3512192 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3512192 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3512192 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3512192 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3512192 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3512192 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3512192 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3512192 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 3512192 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1754272 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 1754272 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 1754272 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 1754272 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 1754272 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 1754272 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 1754272 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 1754272 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 1754272 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 1754272 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 1754272 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 1754272 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3512192 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3512192 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 3512192 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3512192 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3512192 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3512192 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3512192 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3512192 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3512192 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3512192 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3512192 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 3512192 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1754272 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 1754272 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 1754272 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 1754272 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 1754272 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 1754272 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 1754272 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 1754272 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 1754272 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 1754272 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 1754272 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 1754272 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 2649120 in 3 places, all below massif's threshold (1.00%)
       n1: 1759424 0x5DACD6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1759424 0x5DB2C5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 1759424 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1759424 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1759424 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1759424 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1759424 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1759424 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1759424 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1759424 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1759424 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1759424 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1759424 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1759424 0x5DAE3EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1759424 0x5DB2CA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 1759424 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1759424 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1759424 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1759424 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1759424 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1759424 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1759424 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1759424 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1759424 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1759424 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1759424 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1754432 0x5DB05AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1754432 0x5DB2D08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 1754432 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1754432 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1754432 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1754432 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1754432 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1754432 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1754432 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1754432 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1754432 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1754432 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1754432 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
      n1: 21545336 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 21545336 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 21545336 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 21545336 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 21545336 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 21545336 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 21545336 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 21545336 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 21545336 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 21545336 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 21545336 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 21545336 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 21545336 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 21545336 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 10749600 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                     n1: 10749600 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                      n1: 10749600 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                       n1: 10749600 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                        n1: 10749600 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                         n1: 10749600 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                          n1: 10749600 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                           n1: 10749600 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                            n1: 10749600 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                             n1: 10749600 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                              n0: 10749600 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                    n1: 9831144 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                     n1: 9831144 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                      n1: 9831144 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831144 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831144 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831144 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831144 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831144 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831144 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831144 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831144 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 964592 in 1 place, below massif's threshold (1.00%)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n3: 24457216 0x59644E0: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:204)
     n2: 16437248 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n2: 16437248 0x61FF257: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:15)
       n1: 16384000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 16384000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 16384000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 16384000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 16384000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 16384000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 16384000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 16384000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 16384000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 16384000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 16384000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 16384000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 16384000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 16384000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 16384000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 16384000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 16384000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 16384000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 16384000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 16384000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 16384000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 16384000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 16384000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 16384000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 53248 in 1 place, below massif's threshold (1.00%)
      n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 8019968 0x61F79C4: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_aligned_bytes(unsigned long) (cursored_buffer.hpp:61)
      n1: 8019968 0x61F4C44: arcticdb::StringBlock::insert(char const*, unsigned long) (string_pool.cpp:38)
       n2: 8019968 0x61F5307: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:148)
        n1: 7962624 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
         n1: 7962624 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
          n1: 7962624 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
           n1: 7962624 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
            n1: 7962624 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
             n1: 7962624 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
              n1: 7962624 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
               n1: 7962624 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                n1: 7962624 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                 n1: 7962624 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                  n1: 7962624 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                   n1: 7962624 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                    n1: 7962624 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                     n1: 7962624 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                      n1: 7962624 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                       n1: 7962624 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                        n1: 7962624 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                         n1: 7962624 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                          n1: 7962624 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                           n1: 7962624 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                            n1: 7962624 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                             n1: 7962624 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                              n0: 7962624 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
        n0: 57344 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 24144344 0x5DA3F09: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 24144344 0x5DABC5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 24144344 0x5DA4E74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DA35BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x6106847: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x6106917: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60BD750: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6060FA2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x6024B8D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FD385C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FB1CE2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5F90151: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F5169C: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F51A2C: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F50DCD: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59CFFF1: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59D00AD: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59C7CE6: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59B9730: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59A70EF: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x59911C4: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x597CE59: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x5964B6D: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x5955980: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AA585C: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x778D30A: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 2938072 0x640EDC1: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:58)
        n1: 2938072 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
         n1: 2938072 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
          n1: 2938072 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
           n1: 2938072 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
            n1: 2938072 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
             n1: 2938072 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
              n1: 2938072 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
               n1: 2938072 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                n1: 2938072 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                 n1: 2938072 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                  n1: 2938072 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                   n1: 2938072 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                    n1: 2938072 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                     n1: 2938072 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                      n1: 2938072 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 2938072 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 2938072 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 2938072 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 2938072 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 2938072 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 2938072 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 2938072 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 2938072 0x289B4A: _PyObject_MakeTpCall (call.c:215)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 4096 in 2 places, all below massif's threshold (1.00%)
   n0: 44280 in 1 place, below massif's threshold (1.00%)
 n0: 13136717 in 994 places, all below massif's threshold (1.00%)
 n1: 6312960 0x5A13126: __gnu_cxx::new_allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 6312960 0x5A120D4: allocate (allocator.h:185)
   n1: 6312960 0x5A120D4: std::allocator_traits<std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::allocate(std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >&, unsigned long) (alloc_traits.h:464)
    n1: 6312960 0x5A108D3: std::_Vector_base<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::_M_allocate(unsigned long) (stl_vector.h:346)
     n1: 6312960 0x61FB394: void std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::_M_realloc_insert<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (vector.tcc:440)
      n1: 6312960 0x61FA943: std::pair<std::basic_string_view<char, std::char_traits<char> >, long>& std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::emplace_back<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (vector.tcc:121)
       n1: 6312960 0x61F95D2: std::pair<__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, bool> ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::emplace<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1490)
        n1: 6312960 0x61F7E95: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::insert(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1316)
         n2: 6312960 0x61F5384: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:151)
          n1: 6291456 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
           n1: 6291456 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
            n1: 6291456 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
             n1: 6291456 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
              n1: 6291456 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
               n1: 6291456 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
                n1: 6291456 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                 n1: 6291456 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                  n1: 6291456 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                   n1: 6291456 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                    n1: 6291456 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                     n1: 6291456 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                      n1: 6291456 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                       n1: 6291456 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                        n1: 6291456 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                         n1: 6291456 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 6291456 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 6291456 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 6291456 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 6291456 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n1: 6291456 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                               n0: 6291456 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
          n0: 21504 in 1 place, below massif's threshold (1.00%)
 n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4294843 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4224792 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4224792 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2562168 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2562168 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2562168 in 156 places, all below massif's threshold (1.00%)
        n1: 1620736 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n1: 1620736 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n0: 1620736 in 13 places, all below massif's threshold (1.00%)
        n0: 41888 in 1 place, below massif's threshold (1.00%)
      n0: 70051 in 6 places, all below massif's threshold (1.00%)
 n1: 4208768 0x5A11FBD: __gnu_cxx::new_allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 4208768 0x5A0F338: allocate (allocator.h:185)
   n2: 4208768 0x5A0F338: std::allocator_traits<std::allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard> >::allocate(std::allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard>&, unsigned long) (alloc_traits.h:464)
    n1: 4201472 0x5A0F792: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::allocate_buckets_from_shift() (unordered_dense.h:923)
     n1: 4201472 0x61F98C7: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::increase_size() (unordered_dense.h:956)
      n1: 4201472 0x61F95B7: std::pair<__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, bool> ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::emplace<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1485)
       n1: 4201472 0x61F7E95: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::insert(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1316)
        n2: 4201472 0x61F5384: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:151)
         n1: 4194304 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
          n1: 4194304 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
           n1: 4194304 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
            n1: 4194304 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
             n1: 4194304 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
              n1: 4194304 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
               n1: 4194304 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                n1: 4194304 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                 n1: 4194304 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                  n1: 4194304 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                   n1: 4194304 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                    n1: 4194304 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                     n1: 4194304 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                      n1: 4194304 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                       n1: 4194304 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                        n1: 4194304 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                         n1: 4194304 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                          n1: 4194304 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                           n1: 4194304 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                            n1: 4194304 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                             n1: 4194304 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                              n1: 4194304 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                               n0: 4194304 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
         n0: 7168 in 1 place, below massif's threshold (1.00%)
    n0: 7296 in 2 places, all below massif's threshold (1.00%)
 n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 3993350 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 3993350 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 3993350 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 3993350 0x273DD4: r_object (marshal.c:1153)
          n1: 3493097 0x274660: r_object (marshal.c:1215)
           n2: 3493097 0x274241: r_object (marshal.c:1391)
            n1: 3254122 0x27477A: r_object (marshal.c:1215)
             n2: 3254122 0x274241: r_object (marshal.c:1391)
              n2: 1887155 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1884059 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1884059 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1884059 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1884059 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1884059 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1884059 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1884059 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1884059 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1884059 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1884059 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1884059 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1884059 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1884059 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1366967 in 7 places, all below massif's threshold (1.00%)
            n0: 238975 in 8 places, all below massif's threshold (1.00%)
          n0: 500253 in 6 places, all below massif's threshold (1.00%)
 n1: 3146192 0x7567CD2: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 3146192 0x756810D: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 3146192 0x59EEB58: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n2: 3146192 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 3146192 0x5B34040: void arcticdb::CursoredBuffer<arcticdb::Buffer>::ensure<long>(unsigned long) (cursored_buffer.hpp:53)
      n2: 1573096 0x61FF2A6: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:19)
       n1: 1568000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 1568000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 1568000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 1568000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 1568000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 1568000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 1568000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 1568000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 1568000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 1568000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 1568000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 1568000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 1568000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 1568000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 1568000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 1568000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 1568000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 1568000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 1568000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 1568000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 1568000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 1568000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 1568000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 1568000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 5096 in 1 place, below massif's threshold (1.00%)
      n2: 1573096 0x61FF2ED: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:22)
       n1: 1568000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 1568000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 1568000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 1568000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 1568000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 1568000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 1568000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 1568000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 1568000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 1568000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 1568000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 1568000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 1568000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 1568000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 1568000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 1568000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 1568000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 1568000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 1568000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 1568000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 1568000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 1568000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 1568000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 1568000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 5096 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2633456 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2633456 in 10 places, all below massif's threshold (1.00%)
 n1: 1585112 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1585112 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1585112 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1585112 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n1: 1585112 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n0: 1585112 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=64
#-----------
time=2737793223308
mem_heap_B=164979439
mem_heap_extra_B=1600065
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=65
#-----------
time=2740843674973
mem_heap_B=153321693
mem_heap_extra_B=1485851
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=66
#-----------
time=2744250660120
mem_heap_B=165174103
mem_heap_extra_B=1603457
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=67
#-----------
time=2747300999920
mem_heap_B=152983096
mem_heap_extra_B=1485728
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=68
#-----------
time=2750659799949
mem_heap_B=164509966
mem_heap_extra_B=1604386
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=69
#-----------
time=2753709862209
mem_heap_B=151496101
mem_heap_extra_B=1481507
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=70
#-----------
time=2756810205276
mem_heap_B=161797265
mem_heap_extra_B=1595039
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=71
#-----------
time=2759860607657
mem_heap_B=153290515
mem_heap_extra_B=1485589
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=72
#-----------
time=2763257588589
mem_heap_B=165091523
mem_heap_extra_B=1601645
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=73
#-----------
time=2766307956037
mem_heap_B=151070413
mem_heap_extra_B=1482323
mem_stacks_B=0
heap_tree=detailed
n9: 151070413 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 111778968 0x7567C6B: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 111778968 0x756802F: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n4: 111736160 0x597B477: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 62904328 0x5964549: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 62904328 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 42078844 0x5DA392B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 6783072 0x5DAD8AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 6783072 0x5DB2C80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 6783072 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 6783072 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 6783072 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 6783072 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 6783072 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 6783072 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 6783072 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 6783072 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 6783072 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 6783072 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3268256 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 3268256 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 3268256 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 3268256 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 3268256 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 3268256 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 3268256 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 3268256 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 3268256 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 3268256 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 3268256 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 3268256 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 6783072 0x5DAEF2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 6783072 0x5DB2CC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 6783072 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 6783072 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 6783072 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 6783072 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 6783072 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 6783072 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 6783072 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 6783072 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 6783072 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 6783072 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3268256 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 3268256 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 3268256 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 3268256 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 3268256 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 3268256 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 3268256 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 3268256 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 3268256 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 3268256 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 3268256 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 3268256 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 6783072 0x5DAFA6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 6783072 0x5DB2CE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 6783072 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 6783072 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 6783072 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 6783072 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 6783072 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 6783072 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 6783072 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 6783072 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 6783072 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 6783072 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3268256 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 3268256 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 3268256 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 3268256 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 3268256 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 3268256 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 3268256 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 3268256 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 3268256 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 3268256 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 3268256 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 3268256 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 314336 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3889504 0x5DB1C2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3889504 0x5DB2D4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 3889504 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3889504 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3889504 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3889504 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3889504 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3889504 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3889504 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3889504 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3889504 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 3889504 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 3200480 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 3200480 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 3200480 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 3200480 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 3200480 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 3200480 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 3200480 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 3200480 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 3200480 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 3200480 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 3200480 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 3200480 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 3200480 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 689024 in 2 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3394608 0x5DAD30E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3394608 0x5DB2C6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 3394608 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3394608 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3394608 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3394608 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3394608 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3394608 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3394608 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3394608 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3394608 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 3394608 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1636688 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 1636688 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 1636688 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 1636688 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 1636688 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 1636688 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 1636688 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 1636688 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 1636688 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 1636688 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 1636688 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 1636688 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3394608 0x5DAE98E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3394608 0x5DB2CB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 3394608 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3394608 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3394608 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3394608 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3394608 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3394608 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3394608 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3394608 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3394608 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 3394608 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1636688 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 1636688 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 1636688 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 1636688 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 1636688 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 1636688 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 1636688 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 1636688 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 1636688 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 1636688 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 1636688 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 1636688 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 3394608 0x5DAF4CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 3394608 0x5DB2CD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 3394608 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 3394608 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 3394608 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 3394608 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 3394608 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 3394608 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 3394608 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 3394608 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 3394608 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 3394608 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 1636688 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                    n1: 1636688 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                     n1: 1636688 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 1636688 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                       n1: 1636688 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                        n1: 1636688 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                         n1: 1636688 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                          n1: 1636688 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 1636688 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 1636688 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                             n1: 1636688 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                              n0: 1636688 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n1: 1600496 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                    n1: 1600496 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                     n1: 1600496 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 1600496 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 1600496 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 1600496 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 1600496 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 1600496 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 1600496 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 1600496 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 1600496 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 1600496 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 1600496 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 157424 in 1 place, below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 2559780 in 3 places, all below massif's threshold (1.00%)
       n1: 1700376 0x5DACD6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1700376 0x5DB2C5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 1700376 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1700376 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1700376 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1700376 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1700376 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1700376 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1700376 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1700376 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1700376 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1700376 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1700376 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1700376 0x5DAE3EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1700376 0x5DB2CA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 1700376 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1700376 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1700376 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1700376 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1700376 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1700376 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1700376 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1700376 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1700376 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1700376 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1700376 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 1695768 0x5DB05AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 1695768 0x5DB2D08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 1695768 0x5DC1A91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 1695768 0x5DC1C7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 1695768 0x5DA6817: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 1695768 0x5DDB8C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 1695768 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 1695768 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 1695768 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                n1: 1695768 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                 n2: 1695768 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 1695768 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 1695768 in 3 places, all below massif's threshold (1.00%)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
      n1: 20825484 0x61F4DF8: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 20825484 0x61F5196: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 20825484 0x5E11A80: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 20825484 0x5E18BCC: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 20825484 0x5E201F3: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 20825484 0x5E203C0: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 20825484 0x5DDA8CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 20825484 0x5DDBA34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 20825484 0x5DDBB44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 20825484 0x5DDBCD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 20825484 0x7492A7B: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:407)
                 n1: 20825484 0x74E0EC4: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:222)
                  n2: 20825484 0x78D131A: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 20825484 0x78D13C6: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 10029748 0x777BFAF: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:141)
                     n1: 10029748 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                      n1: 10029748 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                       n1: 10029748 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                        n1: 10029748 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                         n1: 10029748 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                          n1: 10029748 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                           n1: 10029748 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                            n1: 10029748 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                             n1: 10029748 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                              n0: 10029748 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                    n1: 9831144 0x7718031: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1610)
                     n1: 9831144 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                      n1: 9831144 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831144 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831144 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831144 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831144 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831144 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831144 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831144 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831144 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 964592 in 1 place, below massif's threshold (1.00%)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n3: 24641536 0x59644E0: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:204)
     n2: 16433152 0x59F243C: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n2: 16433152 0x61FF257: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:15)
       n1: 16384000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 16384000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 16384000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 16384000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 16384000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 16384000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 16384000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 16384000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 16384000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 16384000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 16384000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 16384000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 16384000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 16384000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 16384000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 16384000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 16384000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 16384000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 16384000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 16384000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 16384000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 16384000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 16384000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 16384000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 49152 in 1 place, below massif's threshold (1.00%)
      n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 8208384 0x61F79C4: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_aligned_bytes(unsigned long) (cursored_buffer.hpp:61)
      n1: 8208384 0x61F4C44: arcticdb::StringBlock::insert(char const*, unsigned long) (string_pool.cpp:38)
       n2: 8208384 0x61F5307: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:148)
        n1: 8155136 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
         n1: 8155136 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
          n1: 8155136 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
           n1: 8155136 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
            n1: 8155136 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
             n1: 8155136 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
              n1: 8155136 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
               n1: 8155136 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                n1: 8155136 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                 n1: 8155136 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                  n1: 8155136 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                   n1: 8155136 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                    n1: 8155136 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                     n1: 8155136 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                      n1: 8155136 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                       n1: 8155136 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                        n1: 8155136 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                         n1: 8155136 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                          n1: 8155136 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                           n1: 8155136 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                            n1: 8155136 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                             n1: 8155136 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                              n0: 8155136 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
        n0: 53248 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 24186200 0x5DA3F09: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 24186200 0x5DABC5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 24186200 0x5DA4E74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DA35BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x6106847: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x6106917: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60BD750: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6060FA2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x6024B8D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FD385C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FB1CE2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5F90151: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F5169C: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F51A2C: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F50DCD: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59CFFF1: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59D00AD: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59C7CE6: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59B9730: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59A70EF: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x59911C4: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x597CE59: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x5964B6D: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x5955980: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AA585C: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x778D30A: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
       n1: 2979928 0x640EDC1: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:58)
        n1: 2979928 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
         n1: 2979928 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
          n1: 2979928 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
           n1: 2979928 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
            n1: 2979928 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
             n1: 2979928 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
              n1: 2979928 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
               n1: 2979928 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                n1: 2979928 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                 n1: 2979928 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                  n1: 2979928 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                   n1: 2979928 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                    n1: 2979928 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                     n1: 2979928 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                      n1: 2979928 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 2979928 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 2979928 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 2979928 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 2979928 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 2979928 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 2979928 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 2979928 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 2979928 0x289B4A: _PyObject_MakeTpCall (call.c:215)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 4096 in 2 places, all below massif's threshold (1.00%)
   n0: 42808 in 1 place, below massif's threshold (1.00%)
 n0: 13120108 in 994 places, all below massif's threshold (1.00%)
 n1: 6311424 0x5A13126: __gnu_cxx::new_allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 6311424 0x5A120D4: allocate (allocator.h:185)
   n1: 6311424 0x5A120D4: std::allocator_traits<std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::allocate(std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >&, unsigned long) (alloc_traits.h:464)
    n1: 6311424 0x5A108D3: std::_Vector_base<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::_M_allocate(unsigned long) (stl_vector.h:346)
     n1: 6311424 0x61FB394: void std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::_M_realloc_insert<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (vector.tcc:440)
      n1: 6311424 0x61FA943: std::pair<std::basic_string_view<char, std::char_traits<char> >, long>& std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > >::emplace_back<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (vector.tcc:121)
       n1: 6311424 0x61F95D2: std::pair<__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, bool> ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::emplace<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1490)
        n1: 6311424 0x61F7E95: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::insert(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1316)
         n2: 6311424 0x61F5384: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:151)
          n1: 6291456 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
           n1: 6291456 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
            n1: 6291456 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
             n1: 6291456 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
              n1: 6291456 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
               n1: 6291456 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
                n1: 6291456 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                 n1: 6291456 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                  n1: 6291456 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                   n1: 6291456 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                    n1: 6291456 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                     n1: 6291456 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                      n1: 6291456 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                       n1: 6291456 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                        n1: 6291456 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                         n1: 6291456 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                          n1: 6291456 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                           n1: 6291456 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                            n1: 6291456 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                             n1: 6291456 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                              n1: 6291456 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                               n0: 6291456 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
          n0: 19968 in 1 place, below massif's threshold (1.00%)
 n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4294843 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4294843 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4224792 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4224792 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2562168 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2562168 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2562168 in 156 places, all below massif's threshold (1.00%)
        n1: 1620736 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n1: 1620736 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n0: 1620736 in 13 places, all below massif's threshold (1.00%)
        n0: 41888 in 1 place, below massif's threshold (1.00%)
      n0: 70051 in 6 places, all below massif's threshold (1.00%)
 n1: 4207744 0x5A11FBD: __gnu_cxx::new_allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 4207744 0x5A0F338: allocate (allocator.h:185)
   n2: 4207744 0x5A0F338: std::allocator_traits<std::allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard> >::allocate(std::allocator<ankerl::unordered_dense::v4_1_2::bucket_type::standard>&, unsigned long) (alloc_traits.h:464)
    n1: 4200960 0x5A0F792: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::allocate_buckets_from_shift() (unordered_dense.h:923)
     n1: 4200960 0x61F98C7: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::increase_size() (unordered_dense.h:956)
      n1: 4200960 0x61F95B7: std::pair<__gnu_cxx::__normal_iterator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>*, std::vector<std::pair<std::basic_string_view<char, std::char_traits<char> >, long>, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> > > >, bool> ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::emplace<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1485)
       n1: 4200960 0x61F7E95: ankerl::unordered_dense::v4_1_2::detail::table<std::basic_string_view<char, std::char_traits<char> >, long, ankerl::unordered_dense::v4_1_2::hash<std::basic_string_view<char, std::char_traits<char> >, void>, std::equal_to<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::pair<std::basic_string_view<char, std::char_traits<char> >, long> >, ankerl::unordered_dense::v4_1_2::bucket_type::standard, false>::insert(std::pair<std::basic_string_view<char, std::char_traits<char> >, long>&&) (unordered_dense.h:1316)
        n2: 4200960 0x61F5384: arcticdb::StringPool::get(std::basic_string_view<char, std::char_traits<char> >, bool) (string_pool.cpp:151)
         n1: 4194304 0x640EAE7: arcticdb::merge_string_column(arcticdb::ChunkedBufferImpl<3968ul>&, std::shared_ptr<arcticdb::StringPool> const&, std::shared_ptr<arcticdb::StringPool> const&, arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >&, bool) (merge_utils.hpp:26)
          n1: 4194304 0x640EDF4: arcticdb::merge_string_columns(arcticdb::SegmentInMemory const&, std::shared_ptr<arcticdb::StringPool> const&, bool) (merge_utils.hpp:59)
           n1: 4194304 0x776C93A: arcticdb::merge_segments(std::vector<arcticdb::SegmentInMemory, std::allocator<arcticdb::SegmentInMemory> >&, arcticdb::SegmentInMemory&, arcticdb::entity::Sparsity) (merge_utils.hpp:87)
            n1: 4194304 0x778D297: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:101)
             n1: 4194304 0x778CF57: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
              n1: 4194304 0x777C072: void arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, std::allocator<folly::Future<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > > >&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool) (version_core-inl.hpp:148)
               n1: 4194304 0x7717942: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1628)
                n1: 4194304 0x776074F: void std::__invoke_impl<void, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                 n1: 4194304 0x775BC30: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:96)
                  n1: 4194304 0x7751945: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<void> (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1016)
                   n1: 4194304 0x7754242: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<void>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1727)
                    n1: 4194304 0x7754336: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1766)
                     n1: 4194304 0x7717A90: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                      n1: 4194304 0x7717B31: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                       n1: 4194304 0x7718250: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&) (version_core.cpp:1622)
                        n1: 4194304 0x759CC40: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1015)
                         n1: 4194304 0x780D4B5: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                          n1: 4194304 0x5BD1190: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                           n1: 4194304 0x5C69E31: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                            n1: 4194304 0x5C395B0: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                             n1: 4194304 0x5C06FC9: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                              n1: 4194304 0x5C07647: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                               n0: 4194304 0x5949A53: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
         n0: 6656 in 1 place, below massif's threshold (1.00%)
    n0: 6784 in 2 places, all below massif's threshold (1.00%)
 n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 3993350 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 3993350 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 3993350 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 3993350 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 3993350 0x273DD4: r_object (marshal.c:1153)
          n1: 3493097 0x274660: r_object (marshal.c:1215)
           n2: 3493097 0x274241: r_object (marshal.c:1391)
            n1: 3254122 0x27477A: r_object (marshal.c:1215)
             n2: 3254122 0x274241: r_object (marshal.c:1391)
              n2: 1887155 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1884059 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1884059 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1884059 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1884059 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1884059 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1884059 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1884059 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1884059 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1884059 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1884059 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1884059 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1884059 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1884059 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1884059 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1884059 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1884059 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1884059 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1884059 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1884059 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1884059 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1884059 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1884059 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1884059 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1884059 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1366967 in 7 places, all below massif's threshold (1.00%)
            n0: 238975 in 8 places, all below massif's threshold (1.00%)
          n0: 500253 in 6 places, all below massif's threshold (1.00%)
 n1: 3145408 0x7567CD2: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 3145408 0x756810D: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 3145408 0x59EEB58: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n2: 3145408 0x59EE94D: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 3145408 0x5B34040: void arcticdb::CursoredBuffer<arcticdb::Buffer>::ensure<long>(unsigned long) (cursored_buffer.hpp:53)
      n2: 1572704 0x61FF2A6: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:19)
       n1: 1568000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 1568000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 1568000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 1568000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 1568000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 1568000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 1568000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 1568000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 1568000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 1568000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 1568000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 1568000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 1568000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 1568000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 1568000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 1568000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 1568000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 1568000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 1568000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 1568000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 1568000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 1568000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 1568000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 1568000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 4704 in 1 place, below massif's threshold (1.00%)
      n2: 1572704 0x61FF2ED: arcticdb::FieldCollection::add_field(arcticdb::entity::TypeDescriptor const&, std::basic_string_view<char, std::char_traits<char> >) (field_collection.cpp:22)
       n1: 1568000 0x61FFBB2: arcticdb::fields_from_proto(arcticc::pb2::descriptors_pb2::StreamDescriptor const&) (field_collection_proto.cpp:16)
        n2: 1568000 0x5DD991A: arcticdb::unpack_timeseries_descriptor_from_proto(google::protobuf::Any const&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:261)
         n1: 1568000 0x5DDA41E: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::SegmentHeader const&, arcticdb::entity::StreamDescriptor const&, unsigned char const*, unsigned char const*, unsigned char const*) (codec.cpp:350)
          n1: 1568000 0x5DDA5A7: arcticdb::decode_timeseries_descriptor_for_incompletes(arcticdb::Segment&) (codec.cpp:365)
           n1: 1568000 0x7B6D11A: arcticdb::get_descriptor_and_data(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool, arcticdb::storage::ReadKeyOpts) (append_map.cpp:387)
            n1: 1568000 0x7B6D447: arcticdb::entry_from_key(std::shared_ptr<arcticdb::stream::StreamSource> const&, arcticdb::entity::AtomKeyImpl const&, bool) (append_map.cpp:406)
             n1: 1568000 0x7B74632: auto arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}::operator()<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&) const (append_map.cpp:80)
              n1: 1568000 0x7B7870E: void std::__invoke_impl<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
               n1: 1568000 0x7B77819: std::enable_if<is_invocable_r_v<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, void>::type std::__invoke_r<void, arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:111)
                n1: 1568000 0x7B761FE: std::_Function_handler<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool)::{lambda(auto:1 const&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                 n1: 1568000 0x749920A: std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                  n1: 1568000 0x748E284: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (storage.hpp:167)
                   n1: 1568000 0x74B7EA4: bool std::__invoke_impl<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(std::__invoke_other, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:61)
                    n1: 1568000 0x74AD393: std::enable_if<is_invocable_r_v<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >, bool>::type std::__invoke_r<bool, arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> >(arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (invoke.h:114)
                     n1: 1568000 0x74A1B04: std::_Function_handler<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&), arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)#1}>::_M_invoke(std::_Any_data const&, std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) (std_function.h:290)
                      n1: 1568000 0x750FF5E: std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)>::operator()(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&) const (std_function.h:590)
                       n1: 1568000 0x7B65E45: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:323)
                        n1: 1568000 0x7B651FA: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:70)
                         n1: 1568000 0x748E318: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:170)
                          n1: 1568000 0x748F30A: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:99)
                           n1: 1568000 0x74906CD: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n1: 1568000 0x74E0D4F: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:206)
                             n1: 1568000 0x7B74822: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n0: 1568000 0x7B6E21F: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
         n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 4704 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2633456 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2633456 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2633456 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2633456 in 10 places, all below massif's threshold (1.00%)
 n1: 1585112 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1585112 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1585112 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1585112 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n1: 1585112 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n0: 1585112 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=74
#-----------
time=2769357768263
mem_heap_B=165116652
mem_heap_extra_B=1590596
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=75
#-----------
time=2772422918185
mem_heap_B=150730595
mem_heap_extra_B=1483717
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=76
#-----------
time=2775472728617
mem_heap_B=170534607
mem_heap_extra_B=1597633
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=77
#-----------
time=2778547576756
mem_heap_B=157936894
mem_heap_extra_B=1485218
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=78
#-----------
time=2781597388916
mem_heap_B=114334454
mem_heap_extra_B=1433458
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=79
#-----------
time=2784740419257
mem_heap_B=144085451
mem_heap_extra_B=1447709
mem_stacks_B=0
heap_tree=empty
